graph: {
	display_edge_labels:	yes
	priority_phase:	yes
	port_sharing:	no
	crossing_weight:	median
	splines:	yes
	node: {
		title:	"0"
		label:	"state  0\n $accept -> . program $end\n program -> .[$end]\n program -> . statements\n statements -> . simple_stmt\n simple_stmt -> . expression_stmt\n simple_stmt -> . assert_stmt\n simple_stmt -> . assignment_stmt\n simple_stmt -> . augmented_assignment_stmt\n simple_stmt -> . PASS\n simple_stmt -> . del_stmt\n simple_stmt -> . return_stmt\n simple_stmt -> . yield_stmt\n simple_stmt -> . raise_stmt\n simple_stmt -> . BREAK\n simple_stmt -> . CONTINUE\n simple_stmt -> . import_stmt\n simple_stmt -> . global_stmt\n simple_stmt -> . nonlocal_stmt\n expression_stmt -> . starred_expression\n assert_stmt -> . ASSERT expression ',' expression\n assert_stmt -> . ASSERT expression\n assignment_stmt -> . mytargetlist starred_expression\n assignment_stmt -> . mytargetlist yield_expression\n mytargetlist -> . mytargetlist target_list '='\n mytargetlist -> . target_list '='\n augmented_assignment_stmt -> . slicing augop expression_list\n augmented_assignment_stmt -> . IDENTIFIER augop expression_list\n augmented_assignment_stmt -> . slicing augop yield_expression\n augmented_assignment_stmt -> . IDENTIFIER augop yield_expression\n return_stmt -> . RETURN expression_list\n return_stmt -> . RETURN\n raise_stmt -> . RAISE\n raise_stmt -> . RAISE expression FROM expression\n raise_stmt -> . RAISE expression\n del_stmt -> . DEL target_list\n yield_stmt -> . yield_expression\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n starred_expression -> . expression\n starred_expression -> . starred_item\n yield_expression -> . YIELD\n yield_expression -> . YIELD expression_list\n yield_expression -> . YIELD FROM expression\n expression -> . conditional_expression\n expression -> . lambda_expr\n starred_item -> . starred_item assignment_expression ','\n starred_item -> . assignment_expression\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n target_list -> . target mytarget\n target_list -> . target mytarget ','\n target_list -> . slicing mytarget\n target_list -> . slicing mytarget ','\n target_list -> . '[' ']' mytarget\n target_list -> . '[' ']' mytarget ','\n target_list -> . '(' ')' mytarget\n target_list -> . '(' ')' mytarget ','\n target_list -> . IDENTIFIER mytarget\n target_list -> . IDENTIFIER mytarget ','\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n assignment_expression -> . IDENTIFIER ASSIGN expression\n atom -> . NUMBER\n atom -> . enclosure\n nonlocal_stmt -> . NONLOCAL IDENTIFIER\n global_stmt -> . GLOBAL IDENTIFIER\n import_stmt -> . IMPORT module AS IDENTIFIER mymodule\n import_stmt -> . IMPORT module mymodule\n import_stmt -> . FROM relative_module IMPORT IDENTIFIER AS IDENTIFIER mymoduleidentifier\n import_stmt -> . FROM relative_module IMPORT IDENTIFIER mymoduleidentifier\n import_stmt -> . FROM relative_module IMPORT '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> . FROM relative_module IMPORT '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier ')'\n import_stmt -> . FROM relative_module IMPORT '(' IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> . FROM relative_module IMPORT '(' IDENTIFIER mymoduleidentifier ')'\n import_stmt -> . FROM relative_module IMPORT '*'"
	}
	edge: {
		sourcename:	"0"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"2"
		label:	"IMPORT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"3"
		label:	"PASS"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"4"
		label:	"BREAK"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"5"
		label:	"RAISE"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"6"
		label:	"CONTINUE"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"8"
		label:	"YIELD"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"10"
		label:	"FROM"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"11"
		label:	"NONLOCAL"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"12"
		label:	"ASSERT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"13"
		label:	"DEL"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"14"
		label:	"GLOBAL"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"15"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"17"
		label:	"RETURN"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"21"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"22"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"24"
		label:	"program"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"25"
		label:	"statements"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"26"
		label:	"simple_stmt"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"27"
		label:	"expression_stmt"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"28"
		label:	"assert_stmt"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"29"
		label:	"assignment_stmt"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"30"
		label:	"mytargetlist"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"31"
		label:	"augmented_assignment_stmt"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"32"
		label:	"return_stmt"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"33"
		label:	"raise_stmt"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"34"
		label:	"del_stmt"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"35"
		label:	"yield_stmt"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"48"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"56"
		label:	"starred_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"57"
		label:	"yield_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"58"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"59"
		label:	"starred_item"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"62"
		label:	"target_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"66"
		label:	"target"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"67"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"69"
		label:	"nonlocal_stmt"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"70"
		label:	"global_stmt"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"0"
		targetname:	"71"
		label:	"import_stmt"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"1"
		label:	"state  1\n await_expr -> AWAIT . primary\n await_expr -> AWAIT . slicing\n await_expr -> AWAIT . IDENTIFIER\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	edge: {
		sourcename:	"1"
		targetname:	"72"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"75"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"76"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"1"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"2"
		label:	"state  2\n import_stmt -> IMPORT . module AS IDENTIFIER mymodule\n import_stmt -> IMPORT . module mymodule\n module -> . identifiermodule IDENTIFIER\n identifiermodule -> .\n identifiermodule -> . identifiermodule IDENTIFIER '.'"
	}
	edge: {
		sourcename:	"2"
		targetname:	"77"
		label:	"module"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"2"
		targetname:	"78"
		label:	"identifiermodule"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"3"
		label:	"state  3\n simple_stmt -> PASS ."
	}
	node: {
		title:	"4"
		label:	"state  4\n simple_stmt -> BREAK ."
	}
	node: {
		title:	"5"
		label:	"state  5\n raise_stmt -> RAISE .[$end]\n raise_stmt -> RAISE . expression FROM expression\n raise_stmt -> RAISE . expression\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"5"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"81"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"5"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"6"
		label:	"state  6\n simple_stmt -> CONTINUE ."
	}
	node: {
		title:	"7"
		label:	"state  7\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n not_test -> . comparison\n not_test -> . NOT not_test\n not_test -> NOT . not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"7"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"82"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"7"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"8"
		label:	"state  8\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n yield_expression -> YIELD .[$end, ')']\n yield_expression -> YIELD . expression_list\n yield_expression -> YIELD . FROM expression\n expression -> . conditional_expression\n expression -> . lambda_expr\n expression_list -> . expression myexpression\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"8"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"8"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"83"
		label:	"FROM"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"84"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"85"
		label:	"expression_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"8"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"9"
		label:	"state  9\n myparameterlist -> .[':']\n myparameterlist -> . parameter_list\n parameter_list -> . defparameter mydefparameter ',' '/' ',' parameter_list_no_posonly\n parameter_list -> . defparameter mydefparameter ',' '/' ','\n parameter_list -> . defparameter mydefparameter ',' '/'\n parameter_list -> . parameter_list_no_posonly\n parameter_list_no_posonly -> . defparameter mydefparameter ',' parameter_list_starargs\n parameter_list_no_posonly -> . defparameter mydefparameter ','\n parameter_list_no_posonly -> . defparameter mydefparameter\n parameter_list_no_posonly -> . parameter_list_starargs\n parameter_list_starargs -> . '*' parameter mydefparameter ',' POWER parameter ','\n parameter_list_starargs -> . '*' parameter mydefparameter ',' POWER parameter\n parameter_list_starargs -> . '*' parameter mydefparameter ','\n parameter_list_starargs -> . '*' parameter mydefparameter\n parameter_list_starargs -> . '*' mydefparameter ',' POWER parameter ','\n parameter_list_starargs -> . '*' mydefparameter ',' POWER parameter\n parameter_list_starargs -> . '*' mydefparameter ','\n parameter_list_starargs -> . '*' mydefparameter\n parameter_list_starargs -> . POWER parameter ','\n parameter_list_starargs -> . POWER parameter\n defparameter -> . parameter\n defparameter -> . parameter '=' expression\n lambda_expr -> LAMBDA . myparameterlist ':' expression\n parameter -> . IDENTIFIER\n parameter -> . IDENTIFIER ':' expression"
	}
	edge: {
		sourcename:	"9"
		targetname:	"86"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"9"
		targetname:	"87"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"9"
		targetname:	"88"
		label:	"'*'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"9"
		targetname:	"89"
		label:	"myparameterlist"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"9"
		targetname:	"90"
		label:	"parameter_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"9"
		targetname:	"91"
		label:	"parameter_list_no_posonly"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"9"
		targetname:	"92"
		label:	"parameter_list_starargs"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"9"
		targetname:	"93"
		label:	"defparameter"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"9"
		targetname:	"94"
		label:	"parameter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"10"
		label:	"state 10\n relative_module -> . '.'\n relative_module -> . module\n relative_module -> . '.' relative_module\n import_stmt -> FROM . relative_module IMPORT IDENTIFIER AS IDENTIFIER mymoduleidentifier\n import_stmt -> FROM . relative_module IMPORT IDENTIFIER mymoduleidentifier\n import_stmt -> FROM . relative_module IMPORT '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> FROM . relative_module IMPORT '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier ')'\n import_stmt -> FROM . relative_module IMPORT '(' IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> FROM . relative_module IMPORT '(' IDENTIFIER mymoduleidentifier ')'\n import_stmt -> FROM . relative_module IMPORT '*'\n module -> . identifiermodule IDENTIFIER\n identifiermodule -> .[IDENTIFIER]\n identifiermodule -> . identifiermodule IDENTIFIER '.'"
	}
	edge: {
		sourcename:	"10"
		targetname:	"95"
		label:	"'.'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"10"
		targetname:	"96"
		label:	"relative_module"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"10"
		targetname:	"97"
		label:	"module"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"10"
		targetname:	"78"
		label:	"identifiermodule"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"11"
		label:	"state 11\n nonlocal_stmt -> NONLOCAL . IDENTIFIER"
	}
	edge: {
		sourcename:	"11"
		targetname:	"98"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"12"
		label:	"state 12\n assert_stmt -> ASSERT . expression ',' expression\n assert_stmt -> ASSERT . expression\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"12"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"12"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"12"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"99"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"12"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"13"
		label:	"state 13\n del_stmt -> DEL . target_list\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n target_list -> . target mytarget\n target_list -> . target mytarget ','\n target_list -> . slicing mytarget\n target_list -> . slicing mytarget ','\n target_list -> . '[' ']' mytarget\n target_list -> . '[' ']' mytarget ','\n target_list -> . '(' ')' mytarget\n target_list -> . '(' ')' mytarget ','\n target_list -> . IDENTIFIER mytarget\n target_list -> . IDENTIFIER mytarget ','\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	edge: {
		sourcename:	"13"
		targetname:	"100"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"21"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"22"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"101"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"102"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"103"
		label:	"target_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"66"
		label:	"target"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"13"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"14"
		label:	"state 14\n global_stmt -> GLOBAL . IDENTIFIER"
	}
	edge: {
		sourcename:	"14"
		targetname:	"104"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"15"
		label:	"state 15\n augmented_assignment_stmt -> IDENTIFIER . augop expression_list\n augmented_assignment_stmt -> IDENTIFIER . augop yield_expression\n augop -> . ASSIGNADD\n augop -> . ASSIGNMINUS\n augop -> . ASSIGNMUL\n augop -> . ASSIGNARRMUL\n augop -> . ASSIGNDIVIDE\n augop -> . ASSIGNINTDIVIDE\n augop -> . ASSIGNMODULUS\n augop -> . ASSIGNPOWER\n augop -> . ASSIGNLEFTSHIFT\n augop -> . ASSIGNRIGHTSHIFT\n augop -> . ASSIGNANDBIT\n augop -> . ASSIGNXORBIT\n augop -> . ASSIGNORBIT\n power -> IDENTIFIER .[$end, IN, IS, AND, NOT, IF, OR, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', '<', '>', '&', '^']\n power -> IDENTIFIER . mypower\n mypower -> . POWER u_expr\n slicing -> IDENTIFIER . '[' slice_list ']'\n target_list -> IDENTIFIER . mytarget\n target_list -> IDENTIFIER . mytarget ','\n mytarget -> .['=', ',']\n mytarget -> . mytarget ',' target\n mytarget -> . IDENTIFIER\n mytarget -> . mytarget ',' slicing\n mytarget -> . mytarget ',' '[' ']'\n mytarget -> . mytarget ',' '(' ')'\n assignment_expression -> IDENTIFIER . ASSIGN expression"
	}
	edge: {
		sourcename:	"15"
		targetname:	"105"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"106"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"107"
		label:	"ASSIGN"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"108"
		label:	"ASSIGNADD"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"109"
		label:	"ASSIGNMINUS"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"110"
		label:	"ASSIGNMUL"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"111"
		label:	"ASSIGNDIVIDE"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"112"
		label:	"ASSIGNINTDIVIDE"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"113"
		label:	"ASSIGNPOWER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"114"
		label:	"ASSIGNMODULUS"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"115"
		label:	"ASSIGNARRMUL"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"116"
		label:	"ASSIGNANDBIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"117"
		label:	"ASSIGNRIGHTSHIFT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"118"
		label:	"ASSIGNLEFTSHIFT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"119"
		label:	"ASSIGNXORBIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"120"
		label:	"ASSIGNORBIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"121"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"122"
		label:	"augop"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"123"
		label:	"mypower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"15"
		targetname:	"124"
		label:	"mytarget"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"16"
		label:	"state 16\n atom -> NUMBER ."
	}
	node: {
		title:	"17"
		label:	"state 17\n return_stmt -> RETURN . expression_list\n return_stmt -> RETURN .[$end]\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n expression_list -> . expression myexpression\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"17"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"17"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"17"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"17"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"84"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"125"
		label:	"expression_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"17"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"18"
		label:	"state 18\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> '+' . u_expr\n u_expr -> . '~' u_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"18"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"18"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"126"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"18"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"19"
		label:	"state 19\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> '-' . u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"19"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"19"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"19"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"127"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"19"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"20"
		label:	"state 20\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n u_expr -> '~' . u_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"20"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"20"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"20"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"20"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"128"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"20"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"21"
		label:	"state 21\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> '[' . ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> '[' . starred_list ']'\n list_display -> . '[' comprehension ']'\n list_display -> '[' . comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n starred_list -> . starred_item mystarreditem\n comprehension -> . assignment_expression comp_for\n starred_item -> . starred_item assignment_expression ','\n starred_item -> . assignment_expression\n target_list -> . target mytarget\n target_list -> . target mytarget ','\n target_list -> . slicing mytarget\n target_list -> . slicing mytarget ','\n target_list -> . '[' ']' mytarget\n target_list -> '[' . ']' mytarget\n target_list -> . '[' ']' mytarget ','\n target_list -> '[' . ']' mytarget ','\n target_list -> . '(' ')' mytarget\n target_list -> . '(' ')' mytarget ','\n target_list -> . IDENTIFIER mytarget\n target_list -> . IDENTIFIER mytarget ','\n target -> . '[' target_list ']'\n target -> '[' . target_list ']'\n target -> . '(' target_list ')'\n assignment_expression -> . IDENTIFIER ASSIGN expression\n atom -> . NUMBER\n atom -> . enclosure"
	}
	edge: {
		sourcename:	"21"
		targetname:	"129"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"21"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"21"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"130"
		label:	"']'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"22"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"101"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"102"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"131"
		label:	"starred_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"132"
		label:	"comprehension"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"133"
		label:	"starred_item"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"134"
		label:	"target_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"66"
		label:	"target"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"135"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"21"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"22"
		label:	"state 22\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n enclosure -> '(' . ')'\n parenth_form -> . '(' starred_expression ')'\n parenth_form -> '(' . starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n generator_expression -> '(' . expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n yield_atom -> '(' . yield_expression ')'\n starred_expression -> . expression\n starred_expression -> . starred_item\n yield_expression -> . YIELD\n yield_expression -> . YIELD expression_list\n yield_expression -> . YIELD FROM expression\n expression -> . conditional_expression\n expression -> . lambda_expr\n starred_item -> . starred_item assignment_expression ','\n starred_item -> . assignment_expression\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n target_list -> . target mytarget\n target_list -> . target mytarget ','\n target_list -> . slicing mytarget\n target_list -> . slicing mytarget ','\n target_list -> . '[' ']' mytarget\n target_list -> . '[' ']' mytarget ','\n target_list -> . '(' ')' mytarget\n target_list -> '(' . ')' mytarget\n target_list -> . '(' ')' mytarget ','\n target_list -> '(' . ')' mytarget ','\n target_list -> . IDENTIFIER mytarget\n target_list -> . IDENTIFIER mytarget ','\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n target -> '(' . target_list ')'\n assignment_expression -> . IDENTIFIER ASSIGN expression\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"22"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"22"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"22"
		targetname:	"8"
		label:	"YIELD"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"22"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"136"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"22"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"22"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"22"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"137"
		label:	"')'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"22"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"22"
		targetname:	"21"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"22"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"138"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"139"
		label:	"starred_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"140"
		label:	"yield_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"141"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"59"
		label:	"starred_item"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"142"
		label:	"target_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"66"
		label:	"target"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"67"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"22"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"23"
		label:	"state 23\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> '{' . starred_list '}'\n set_display -> . '{' comprehension '}'\n set_display -> '{' . comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> '{' . '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> '{' . dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n dict_display -> '{' . dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n starred_list -> . starred_item mystarreditem\n comprehension -> . assignment_expression comp_for\n dict_item_list -> . dict_item mydictitem\n dict_comprehension -> . expression ':' expression comp_for\n expression -> . conditional_expression\n expression -> . lambda_expr\n starred_item -> . starred_item assignment_expression ','\n starred_item -> . assignment_expression\n dict_item -> . expression ':' expression\n dict_item -> . POWER or_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n assignment_expression -> . IDENTIFIER ASSIGN expression\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"23"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"23"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"23"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"143"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"23"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"144"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"23"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"23"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"23"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"145"
		label:	"'}'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"146"
		label:	"starred_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"147"
		label:	"comprehension"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"148"
		label:	"dict_item_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"149"
		label:	"dict_comprehension"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"150"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"133"
		label:	"starred_item"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"151"
		label:	"dict_item"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"135"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"23"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"24"
		label:	"state 24\n $accept -> program . $end"
	}
	edge: {
		sourcename:	"24"
		targetname:	"152"
		label:	"$end"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"25"
		label:	"state 25\n program -> statements ."
	}
	node: {
		title:	"26"
		label:	"state 26\n statements -> simple_stmt ."
	}
	node: {
		title:	"27"
		label:	"state 27\n simple_stmt -> expression_stmt ."
	}
	node: {
		title:	"28"
		label:	"state 28\n simple_stmt -> assert_stmt ."
	}
	node: {
		title:	"29"
		label:	"state 29\n simple_stmt -> assignment_stmt ."
	}
	node: {
		title:	"30"
		label:	"state 30\n assignment_stmt -> mytargetlist . starred_expression\n assignment_stmt -> mytargetlist . yield_expression\n mytargetlist -> mytargetlist . target_list '='\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n starred_expression -> . expression\n starred_expression -> . starred_item\n yield_expression -> . YIELD\n yield_expression -> . YIELD expression_list\n yield_expression -> . YIELD FROM expression\n expression -> . conditional_expression\n expression -> . lambda_expr\n starred_item -> . starred_item assignment_expression ','\n starred_item -> . assignment_expression\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n target_list -> . target mytarget\n target_list -> . target mytarget ','\n target_list -> . slicing mytarget\n target_list -> . slicing mytarget ','\n target_list -> . '[' ']' mytarget\n target_list -> . '[' ']' mytarget ','\n target_list -> . '(' ')' mytarget\n target_list -> . '(' ')' mytarget ','\n target_list -> . IDENTIFIER mytarget\n target_list -> . IDENTIFIER mytarget ','\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n assignment_expression -> . IDENTIFIER ASSIGN expression\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"30"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"30"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"30"
		targetname:	"8"
		label:	"YIELD"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"30"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"136"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"30"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"30"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"30"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"30"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"30"
		targetname:	"21"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"30"
		targetname:	"22"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"30"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"138"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"153"
		label:	"starred_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"154"
		label:	"yield_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"58"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"59"
		label:	"starred_item"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"155"
		label:	"target_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"66"
		label:	"target"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"67"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"30"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"31"
		label:	"state 31\n simple_stmt -> augmented_assignment_stmt ."
	}
	node: {
		title:	"32"
		label:	"state 32\n simple_stmt -> return_stmt ."
	}
	node: {
		title:	"33"
		label:	"state 33\n simple_stmt -> raise_stmt ."
	}
	node: {
		title:	"34"
		label:	"state 34\n simple_stmt -> del_stmt ."
	}
	node: {
		title:	"35"
		label:	"state 35\n simple_stmt -> yield_stmt ."
	}
	node: {
		title:	"36"
		label:	"state 36\n not_test -> comparison ."
	}
	node: {
		title:	"37"
		label:	"state 37\n and_expr -> and_expr . '&' shift_expr\n xor_expr -> and_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, '|', ':', '=', ')', ',', '<', '>', '^', ']', '}']"
	}
	edge: {
		sourcename:	"37"
		targetname:	"156"
		label:	"'&'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"38"
		label:	"state 38\n xor_expr -> xor_expr . '^' and_expr\n or_expr -> xor_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, '|', ':', '=', ')', ',', '<', '>', ']', '}']"
	}
	edge: {
		sourcename:	"38"
		targetname:	"157"
		label:	"'^'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"39"
		label:	"state 39\n comparison -> or_expr .[$end, ELSE, AND, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, ':', '=', ')', ',', ']', '}']\n comparison -> or_expr . mycomparison\n mycomparison -> . mycomparison comp_operator or_expr\n mycomparison -> . comp_operator or_expr\n comp_operator -> . '<'\n comp_operator -> . '>'\n comp_operator -> . EQUAL\n comp_operator -> . GTE\n comp_operator -> . SME\n comp_operator -> . NOTEQUAL\n comp_operator -> . IS\n comp_operator -> . IS NOT\n comp_operator -> . NOT IN\n comp_operator -> . IN\n or_expr -> or_expr . '|' xor_expr"
	}
	edge: {
		sourcename:	"39"
		targetname:	"158"
		label:	"IN"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"39"
		targetname:	"159"
		label:	"IS"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"39"
		targetname:	"160"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"39"
		targetname:	"161"
		label:	"EQUAL"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"39"
		targetname:	"162"
		label:	"NOTEQUAL"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"39"
		targetname:	"163"
		label:	"GTE"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"39"
		targetname:	"164"
		label:	"SME"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"39"
		targetname:	"165"
		label:	"'|'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"39"
		targetname:	"166"
		label:	"'<'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"39"
		targetname:	"167"
		label:	"'>'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"39"
		targetname:	"168"
		label:	"mycomparison"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"39"
		targetname:	"169"
		label:	"comp_operator"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"40"
		label:	"state 40\n and_expr -> shift_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n shift_expr -> shift_expr . shifter a_expr\n shifter -> . LEFTSHIFT\n shifter -> . RIGHTSHIFT"
	}
	edge: {
		sourcename:	"40"
		targetname:	"170"
		label:	"RIGHTSHIFT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"40"
		targetname:	"171"
		label:	"LEFTSHIFT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"40"
		targetname:	"172"
		label:	"shifter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"41"
		label:	"state 41\n m_expr -> u_expr ."
	}
	node: {
		title:	"42"
		label:	"state 42\n m_expr -> m_expr . '*' u_expr\n m_expr -> m_expr . '@' m_expr\n m_expr -> m_expr . INTDIVIDE u_expr\n m_expr -> m_expr . '/' u_expr\n m_expr -> m_expr . '%' u_expr\n a_expr -> m_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, RIGHTSHIFT, LEFTSHIFT, '+', '-', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']"
	}
	edge: {
		sourcename:	"42"
		targetname:	"173"
		label:	"INTDIVIDE"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"42"
		targetname:	"174"
		label:	"'*'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"42"
		targetname:	"175"
		label:	"'@'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"42"
		targetname:	"176"
		label:	"'/'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"42"
		targetname:	"177"
		label:	"'%'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"43"
		label:	"state 43\n shift_expr -> a_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, RIGHTSHIFT, LEFTSHIFT, '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n a_expr -> a_expr . '+' m_expr\n a_expr -> a_expr . '-' m_expr"
	}
	edge: {
		sourcename:	"43"
		targetname:	"178"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"43"
		targetname:	"179"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"44"
		label:	"state 44\n firstpower -> await_expr ."
	}
	node: {
		title:	"45"
		label:	"state 45\n u_expr -> power ."
	}
	node: {
		title:	"46"
		label:	"state 46\n power -> firstpower .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n power -> firstpower . mypower\n mypower -> . POWER u_expr"
	}
	edge: {
		sourcename:	"46"
		targetname:	"106"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"46"
		targetname:	"180"
		label:	"mypower"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"47"
		label:	"state 47\n firstpower -> primary .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, POWER, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n slicing -> primary . '[' slice_list ']'"
	}
	edge: {
		sourcename:	"47"
		targetname:	"181"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"48"
		label:	"state 48\n augmented_assignment_stmt -> slicing . augop expression_list\n augmented_assignment_stmt -> slicing . augop yield_expression\n augop -> . ASSIGNADD\n augop -> . ASSIGNMINUS\n augop -> . ASSIGNMUL\n augop -> . ASSIGNARRMUL\n augop -> . ASSIGNDIVIDE\n augop -> . ASSIGNINTDIVIDE\n augop -> . ASSIGNMODULUS\n augop -> . ASSIGNPOWER\n augop -> . ASSIGNLEFTSHIFT\n augop -> . ASSIGNRIGHTSHIFT\n augop -> . ASSIGNANDBIT\n augop -> . ASSIGNXORBIT\n augop -> . ASSIGNORBIT\n firstpower -> slicing .[$end, IN, IS, AND, NOT, IF, OR, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, POWER, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', '<', '>', '&', '^']\n slicing -> slicing . '[' slice_list ']'\n target_list -> slicing . mytarget\n target_list -> slicing . mytarget ','\n mytarget -> .['=', ',']\n mytarget -> . mytarget ',' target\n mytarget -> . IDENTIFIER\n mytarget -> . mytarget ',' slicing\n mytarget -> . mytarget ',' '[' ']'\n mytarget -> . mytarget ',' '(' ')'"
	}
	edge: {
		sourcename:	"48"
		targetname:	"105"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"108"
		label:	"ASSIGNADD"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"109"
		label:	"ASSIGNMINUS"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"110"
		label:	"ASSIGNMUL"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"111"
		label:	"ASSIGNDIVIDE"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"112"
		label:	"ASSIGNINTDIVIDE"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"113"
		label:	"ASSIGNPOWER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"114"
		label:	"ASSIGNMODULUS"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"115"
		label:	"ASSIGNARRMUL"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"116"
		label:	"ASSIGNANDBIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"117"
		label:	"ASSIGNRIGHTSHIFT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"118"
		label:	"ASSIGNLEFTSHIFT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"119"
		label:	"ASSIGNXORBIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"120"
		label:	"ASSIGNORBIT"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"182"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"183"
		label:	"augop"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"48"
		targetname:	"184"
		label:	"mytarget"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"49"
		label:	"state 49\n atom -> enclosure ."
	}
	node: {
		title:	"50"
		label:	"state 50\n enclosure -> parenth_form ."
	}
	node: {
		title:	"51"
		label:	"state 51\n enclosure -> list_display ."
	}
	node: {
		title:	"52"
		label:	"state 52\n enclosure -> set_display ."
	}
	node: {
		title:	"53"
		label:	"state 53\n enclosure -> dict_display ."
	}
	node: {
		title:	"54"
		label:	"state 54\n enclosure -> generator_expression ."
	}
	node: {
		title:	"55"
		label:	"state 55\n enclosure -> yield_atom ."
	}
	node: {
		title:	"56"
		label:	"state 56\n expression_stmt -> starred_expression ."
	}
	node: {
		title:	"57"
		label:	"state 57\n yield_stmt -> yield_expression ."
	}
	node: {
		title:	"58"
		label:	"state 58\n starred_expression -> expression ."
	}
	node: {
		title:	"59"
		label:	"state 59\n starred_expression -> starred_item .[$end, ')']\n starred_item -> starred_item . assignment_expression ','\n assignment_expression -> . IDENTIFIER ASSIGN expression"
	}
	edge: {
		sourcename:	"59"
		targetname:	"185"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"59"
		targetname:	"186"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"60"
		label:	"state 60\n expression -> conditional_expression ."
	}
	node: {
		title:	"61"
		label:	"state 61\n expression -> lambda_expr ."
	}
	node: {
		title:	"62"
		label:	"state 62\n mytargetlist -> target_list . '='"
	}
	edge: {
		sourcename:	"62"
		targetname:	"187"
		label:	"'='"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"63"
		label:	"state 63\n myif -> . IF or_test ELSE expression\n conditional_expression -> or_test .[$end, ASYNC, FROM, FOR, IDENTIFIER, ':', '=', ')', ',', ']', '}']\n conditional_expression -> or_test . myif\n or_test -> or_test . OR and_test"
	}
	edge: {
		sourcename:	"63"
		targetname:	"188"
		label:	"IF"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"63"
		targetname:	"189"
		label:	"OR"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"63"
		targetname:	"190"
		label:	"myif"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"64"
		label:	"state 64\n or_test -> and_test .[$end, ELSE, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, ':', '=', ')', ',', ']', '}']\n and_test -> and_test . AND not_test"
	}
	edge: {
		sourcename:	"64"
		targetname:	"191"
		label:	"AND"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"65"
		label:	"state 65\n and_test -> not_test ."
	}
	node: {
		title:	"66"
		label:	"state 66\n target_list -> target . mytarget\n target_list -> target . mytarget ','\n mytarget -> .[$end, IN, '=', ')', ',', ']']\n mytarget -> . mytarget ',' target\n mytarget -> . IDENTIFIER\n mytarget -> . mytarget ',' slicing\n mytarget -> . mytarget ',' '[' ']'\n mytarget -> . mytarget ',' '(' ')'"
	}
	edge: {
		sourcename:	"66"
		targetname:	"105"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"66"
		targetname:	"192"
		label:	"mytarget"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"67"
		label:	"state 67\n starred_item -> assignment_expression ."
	}
	node: {
		title:	"68"
		label:	"state 68\n primary -> atom ."
	}
	node: {
		title:	"69"
		label:	"state 69\n simple_stmt -> nonlocal_stmt ."
	}
	node: {
		title:	"70"
		label:	"state 70\n simple_stmt -> global_stmt ."
	}
	node: {
		title:	"71"
		label:	"state 71\n simple_stmt -> import_stmt ."
	}
	node: {
		title:	"72"
		label:	"state 72\n await_expr -> AWAIT IDENTIFIER .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, POWER, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n slicing -> IDENTIFIER . '[' slice_list ']'"
	}
	edge: {
		sourcename:	"72"
		targetname:	"121"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"73"
		label:	"state 73\n enclosure -> '[' . ']'\n list_display -> '[' . starred_list ']'\n list_display -> '[' . comprehension ']'\n starred_list -> . starred_item mystarreditem\n comprehension -> . assignment_expression comp_for\n starred_item -> . starred_item assignment_expression ','\n starred_item -> . assignment_expression\n assignment_expression -> . IDENTIFIER ASSIGN expression"
	}
	edge: {
		sourcename:	"73"
		targetname:	"185"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"73"
		targetname:	"193"
		label:	"']'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"73"
		targetname:	"131"
		label:	"starred_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"73"
		targetname:	"132"
		label:	"comprehension"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"73"
		targetname:	"133"
		label:	"starred_item"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"73"
		targetname:	"135"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"74"
		label:	"state 74\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n enclosure -> '(' . ')'\n parenth_form -> . '(' starred_expression ')'\n parenth_form -> '(' . starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n generator_expression -> '(' . expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n yield_atom -> '(' . yield_expression ')'\n starred_expression -> . expression\n starred_expression -> . starred_item\n yield_expression -> . YIELD\n yield_expression -> . YIELD expression_list\n yield_expression -> . YIELD FROM expression\n expression -> . conditional_expression\n expression -> . lambda_expr\n starred_item -> . starred_item assignment_expression ','\n starred_item -> . assignment_expression\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n assignment_expression -> . IDENTIFIER ASSIGN expression\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"74"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"8"
		label:	"YIELD"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"74"
		targetname:	"143"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"74"
		targetname:	"194"
		label:	"')'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"74"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"74"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"74"
		targetname:	"139"
		label:	"starred_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"74"
		targetname:	"140"
		label:	"yield_expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"74"
		targetname:	"141"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"59"
		label:	"starred_item"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"67"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"74"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"75"
		label:	"state 75\n await_expr -> AWAIT primary .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, POWER, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n slicing -> primary . '[' slice_list ']'"
	}
	edge: {
		sourcename:	"75"
		targetname:	"181"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"76"
		label:	"state 76\n await_expr -> AWAIT slicing .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, POWER, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n slicing -> slicing . '[' slice_list ']'"
	}
	edge: {
		sourcename:	"76"
		targetname:	"182"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"77"
		label:	"state 77\n import_stmt -> IMPORT module . AS IDENTIFIER mymodule\n import_stmt -> IMPORT module . mymodule\n mymodule -> .[$end]\n mymodule -> . ',' module mymodule\n mymodule -> . ',' module AS IDENTIFIER mymodule"
	}
	edge: {
		sourcename:	"77"
		targetname:	"195"
		label:	"AS"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"77"
		targetname:	"196"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"77"
		targetname:	"197"
		label:	"mymodule"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"78"
		label:	"state 78\n module -> identifiermodule . IDENTIFIER\n identifiermodule -> identifiermodule . IDENTIFIER '.'"
	}
	edge: {
		sourcename:	"78"
		targetname:	"198"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"79"
		label:	"state 79\n power -> IDENTIFIER .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n power -> IDENTIFIER . mypower\n mypower -> . POWER u_expr\n slicing -> IDENTIFIER . '[' slice_list ']'"
	}
	edge: {
		sourcename:	"79"
		targetname:	"106"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"79"
		targetname:	"121"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"79"
		targetname:	"123"
		label:	"mypower"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"80"
		label:	"state 80\n firstpower -> slicing .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, POWER, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n slicing -> slicing . '[' slice_list ']'"
	}
	edge: {
		sourcename:	"80"
		targetname:	"182"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"81"
		label:	"state 81\n raise_stmt -> RAISE expression . FROM expression\n raise_stmt -> RAISE expression .[$end]"
	}
	edge: {
		sourcename:	"81"
		targetname:	"199"
		label:	"FROM"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"82"
		label:	"state 82\n not_test -> NOT not_test ."
	}
	node: {
		title:	"83"
		label:	"state 83\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n yield_expression -> YIELD FROM . expression\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"83"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"83"
		targetname:	"200"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"83"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"84"
		label:	"state 84\n expression_list -> expression . myexpression\n myexpression -> .[$end, ')']\n myexpression -> . ',' expression myexpression\n myexpression -> . ','"
	}
	edge: {
		sourcename:	"84"
		targetname:	"201"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"84"
		targetname:	"202"
		label:	"myexpression"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"85"
		label:	"state 85\n yield_expression -> YIELD expression_list ."
	}
	node: {
		title:	"86"
		label:	"state 86\n parameter -> IDENTIFIER .['=', ',']\n parameter -> IDENTIFIER . ':' expression"
	}
	edge: {
		sourcename:	"86"
		targetname:	"203"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"87"
		label:	"state 87\n parameter_list_starargs -> POWER . parameter ','\n parameter_list_starargs -> POWER . parameter\n parameter -> . IDENTIFIER\n parameter -> . IDENTIFIER ':' expression"
	}
	backedge: {
		sourcename:	"87"
		targetname:	"86"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"87"
		targetname:	"204"
		label:	"parameter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"88"
		label:	"state 88\n mydefparameter -> .[':']\n mydefparameter -> . ',' defparameter mydefparameter\n parameter_list_starargs -> '*' . parameter mydefparameter ',' POWER parameter ','\n parameter_list_starargs -> '*' . parameter mydefparameter ',' POWER parameter\n parameter_list_starargs -> '*' . parameter mydefparameter ','\n parameter_list_starargs -> '*' . parameter mydefparameter\n parameter_list_starargs -> '*' . mydefparameter ',' POWER parameter ','\n parameter_list_starargs -> '*' . mydefparameter ',' POWER parameter\n parameter_list_starargs -> '*' . mydefparameter ','\n parameter_list_starargs -> '*' . mydefparameter\n parameter -> . IDENTIFIER\n parameter -> . IDENTIFIER ':' expression"
	}
	backedge: {
		sourcename:	"88"
		targetname:	"86"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"88"
		targetname:	"205"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"88"
		targetname:	"206"
		label:	"mydefparameter"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"88"
		targetname:	"207"
		label:	"parameter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"89"
		label:	"state 89\n lambda_expr -> LAMBDA myparameterlist . ':' expression"
	}
	edge: {
		sourcename:	"89"
		targetname:	"208"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"90"
		label:	"state 90\n myparameterlist -> parameter_list ."
	}
	node: {
		title:	"91"
		label:	"state 91\n parameter_list -> parameter_list_no_posonly ."
	}
	node: {
		title:	"92"
		label:	"state 92\n parameter_list_no_posonly -> parameter_list_starargs ."
	}
	node: {
		title:	"93"
		label:	"state 93\n parameter_list -> defparameter . mydefparameter ',' '/' ',' parameter_list_no_posonly\n parameter_list -> defparameter . mydefparameter ',' '/' ','\n parameter_list -> defparameter . mydefparameter ',' '/'\n parameter_list_no_posonly -> defparameter . mydefparameter ',' parameter_list_starargs\n parameter_list_no_posonly -> defparameter . mydefparameter ','\n parameter_list_no_posonly -> defparameter . mydefparameter\n mydefparameter -> .[':']\n mydefparameter -> . ',' defparameter mydefparameter"
	}
	edge: {
		sourcename:	"93"
		targetname:	"205"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"93"
		targetname:	"209"
		label:	"mydefparameter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"94"
		label:	"state 94\n defparameter -> parameter .[':', ',']\n defparameter -> parameter . '=' expression"
	}
	edge: {
		sourcename:	"94"
		targetname:	"210"
		label:	"'='"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"95"
		label:	"state 95\n relative_module -> . '.'[IMPORT]\n relative_module -> '.' .[IMPORT]\n relative_module -> . module\n relative_module -> . '.' relative_module\n relative_module -> '.' . relative_module\n module -> . identifiermodule IDENTIFIER\n identifiermodule -> .[IDENTIFIER]\n identifiermodule -> . identifiermodule IDENTIFIER '.'"
	}
	edge: {
		sourcename:	"95"
		targetname:	"95"
		label:	"'.'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"95"
		targetname:	"211"
		label:	"relative_module"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"95"
		targetname:	"97"
		label:	"module"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"95"
		targetname:	"78"
		label:	"identifiermodule"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"96"
		label:	"state 96\n import_stmt -> FROM relative_module . IMPORT IDENTIFIER AS IDENTIFIER mymoduleidentifier\n import_stmt -> FROM relative_module . IMPORT IDENTIFIER mymoduleidentifier\n import_stmt -> FROM relative_module . IMPORT '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> FROM relative_module . IMPORT '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier ')'\n import_stmt -> FROM relative_module . IMPORT '(' IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> FROM relative_module . IMPORT '(' IDENTIFIER mymoduleidentifier ')'\n import_stmt -> FROM relative_module . IMPORT '*'"
	}
	edge: {
		sourcename:	"96"
		targetname:	"212"
		label:	"IMPORT"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"97"
		label:	"state 97\n relative_module -> module ."
	}
	node: {
		title:	"98"
		label:	"state 98\n nonlocal_stmt -> NONLOCAL IDENTIFIER ."
	}
	node: {
		title:	"99"
		label:	"state 99\n assert_stmt -> ASSERT expression . ',' expression\n assert_stmt -> ASSERT expression .[$end]"
	}
	edge: {
		sourcename:	"99"
		targetname:	"213"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"100"
		label:	"state 100\n slicing -> IDENTIFIER . '[' slice_list ']'\n target_list -> IDENTIFIER . mytarget\n target_list -> IDENTIFIER . mytarget ','\n mytarget -> .[$end, IN, ',']\n mytarget -> . mytarget ',' target\n mytarget -> . IDENTIFIER\n mytarget -> . mytarget ',' slicing\n mytarget -> . mytarget ',' '[' ']'\n mytarget -> . mytarget ',' '(' ')'"
	}
	edge: {
		sourcename:	"100"
		targetname:	"105"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"100"
		targetname:	"121"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"100"
		targetname:	"124"
		label:	"mytarget"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"101"
		label:	"state 101\n slicing -> primary . '[' slice_list ']'"
	}
	edge: {
		sourcename:	"101"
		targetname:	"181"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"102"
		label:	"state 102\n slicing -> slicing . '[' slice_list ']'\n target_list -> slicing . mytarget\n target_list -> slicing . mytarget ','\n mytarget -> .[$end, IN, ',', ']']\n mytarget -> . mytarget ',' target\n mytarget -> . IDENTIFIER\n mytarget -> . mytarget ',' slicing\n mytarget -> . mytarget ',' '[' ']'\n mytarget -> . mytarget ',' '(' ')'"
	}
	edge: {
		sourcename:	"102"
		targetname:	"105"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"102"
		targetname:	"182"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"102"
		targetname:	"184"
		label:	"mytarget"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"103"
		label:	"state 103\n del_stmt -> DEL target_list ."
	}
	node: {
		title:	"104"
		label:	"state 104\n global_stmt -> GLOBAL IDENTIFIER ."
	}
	node: {
		title:	"105"
		label:	"state 105\n mytarget -> IDENTIFIER ."
	}
	node: {
		title:	"106"
		label:	"state 106\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n mypower -> POWER . u_expr\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"106"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"106"
		targetname:	"214"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"106"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"107"
		label:	"state 107\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n assignment_expression -> IDENTIFIER ASSIGN . expression\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"107"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"107"
		targetname:	"215"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"107"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"108"
		label:	"state 108\n augop -> ASSIGNADD ."
	}
	node: {
		title:	"109"
		label:	"state 109\n augop -> ASSIGNMINUS ."
	}
	node: {
		title:	"110"
		label:	"state 110\n augop -> ASSIGNMUL ."
	}
	node: {
		title:	"111"
		label:	"state 111\n augop -> ASSIGNDIVIDE ."
	}
	node: {
		title:	"112"
		label:	"state 112\n augop -> ASSIGNINTDIVIDE ."
	}
	node: {
		title:	"113"
		label:	"state 113\n augop -> ASSIGNPOWER ."
	}
	node: {
		title:	"114"
		label:	"state 114\n augop -> ASSIGNMODULUS ."
	}
	node: {
		title:	"115"
		label:	"state 115\n augop -> ASSIGNARRMUL ."
	}
	node: {
		title:	"116"
		label:	"state 116\n augop -> ASSIGNANDBIT ."
	}
	node: {
		title:	"117"
		label:	"state 117\n augop -> ASSIGNRIGHTSHIFT ."
	}
	node: {
		title:	"118"
		label:	"state 118\n augop -> ASSIGNLEFTSHIFT ."
	}
	node: {
		title:	"119"
		label:	"state 119\n augop -> ASSIGNXORBIT ."
	}
	node: {
		title:	"120"
		label:	"state 120\n augop -> ASSIGNORBIT ."
	}
	node: {
		title:	"121"
		label:	"state 121\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n slicing -> IDENTIFIER '[' . slice_list ']'\n slice_list -> . slice_item mysliceitem\n slice_item -> . expression\n slice_item -> . proper_slice\n proper_slice -> . ':'\n proper_slice -> . ':' ':'\n proper_slice -> . ':' ':' expression\n proper_slice -> . ':' expression ':'\n proper_slice -> . ':' expression ':' expression\n proper_slice -> . expression ':' expression ':' expression\n proper_slice -> . expression ':' expression\n proper_slice -> . expression ':' ':' expression\n proper_slice -> . expression ':' ':'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"121"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"121"
		targetname:	"216"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"121"
		targetname:	"217"
		label:	"slice_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"121"
		targetname:	"218"
		label:	"slice_item"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"121"
		targetname:	"219"
		label:	"proper_slice"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"121"
		targetname:	"220"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"121"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"122"
		label:	"state 122\n augmented_assignment_stmt -> IDENTIFIER augop . expression_list\n augmented_assignment_stmt -> IDENTIFIER augop . yield_expression\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n yield_expression -> . YIELD\n yield_expression -> . YIELD expression_list\n yield_expression -> . YIELD FROM expression\n expression -> . conditional_expression\n expression -> . lambda_expr\n expression_list -> . expression myexpression\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"122"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"8"
		label:	"YIELD"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"122"
		targetname:	"221"
		label:	"yield_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"84"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"122"
		targetname:	"222"
		label:	"expression_list"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"122"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"123"
		label:	"state 123\n power -> IDENTIFIER mypower ."
	}
	node: {
		title:	"124"
		label:	"state 124\n target_list -> IDENTIFIER mytarget .[$end, IN, '=', ')', ']']\n target_list -> IDENTIFIER mytarget . ','\n mytarget -> mytarget . ',' target\n mytarget -> mytarget . ',' slicing\n mytarget -> mytarget . ',' '[' ']'\n mytarget -> mytarget . ',' '(' ')'"
	}
	edge: {
		sourcename:	"124"
		targetname:	"223"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"125"
		label:	"state 125\n return_stmt -> RETURN expression_list ."
	}
	node: {
		title:	"126"
		label:	"state 126\n u_expr -> '+' u_expr ."
	}
	node: {
		title:	"127"
		label:	"state 127\n u_expr -> '-' u_expr ."
	}
	node: {
		title:	"128"
		label:	"state 128\n u_expr -> '~' u_expr ."
	}
	node: {
		title:	"129"
		label:	"state 129\n slicing -> IDENTIFIER . '[' slice_list ']'\n target_list -> IDENTIFIER . mytarget\n target_list -> IDENTIFIER . mytarget ','\n mytarget -> .[',', ']']\n mytarget -> . mytarget ',' target\n mytarget -> . IDENTIFIER\n mytarget -> . mytarget ',' slicing\n mytarget -> . mytarget ',' '[' ']'\n mytarget -> . mytarget ',' '(' ')'\n assignment_expression -> IDENTIFIER . ASSIGN expression"
	}
	backedge: {
		sourcename:	"129"
		targetname:	"105"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"129"
		targetname:	"107"
		label:	"ASSIGN"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"129"
		targetname:	"121"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"129"
		targetname:	"124"
		label:	"mytarget"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"130"
		label:	"state 130\n enclosure -> '[' ']' .[$end, IN, IS, AND, NOT, ASYNC, IF, OR, FOR, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, POWER, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ')', '<', '>', '&', '^', '[']\n target_list -> '[' ']' . mytarget\n target_list -> '[' ']' . mytarget ','\n mytarget -> .[$end, IN, '=', ')', ',', ']']\n mytarget -> . mytarget ',' target\n mytarget -> . IDENTIFIER\n mytarget -> . mytarget ',' slicing\n mytarget -> . mytarget ',' '[' ']'\n mytarget -> . mytarget ',' '(' ')'"
	}
	backedge: {
		sourcename:	"130"
		targetname:	"105"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"130"
		targetname:	"224"
		label:	"mytarget"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"131"
		label:	"state 131\n list_display -> '[' starred_list . ']'"
	}
	edge: {
		sourcename:	"131"
		targetname:	"225"
		label:	"']'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"132"
		label:	"state 132\n list_display -> '[' comprehension . ']'"
	}
	edge: {
		sourcename:	"132"
		targetname:	"226"
		label:	"']'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"133"
		label:	"state 133\n starred_list -> starred_item . mystarreditem\n starred_item -> starred_item . assignment_expression ','\n mystarreditem -> .[']', '}']\n mystarreditem -> . ',' starred_item mystarreditem\n mystarreditem -> . ','\n assignment_expression -> . IDENTIFIER ASSIGN expression"
	}
	edge: {
		sourcename:	"133"
		targetname:	"185"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"133"
		targetname:	"227"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"133"
		targetname:	"228"
		label:	"mystarreditem"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"133"
		targetname:	"186"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"134"
		label:	"state 134\n target -> '[' target_list . ']'"
	}
	edge: {
		sourcename:	"134"
		targetname:	"229"
		label:	"']'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"135"
		label:	"state 135\n comprehension -> assignment_expression . comp_for\n comp_for -> . ASYNC FOR target_list IN or_test comp_iter\n comp_for -> . FOR target_list IN or_test comp_iter\n comp_for -> . ASYNC FOR target_list IN or_test\n comp_for -> . FOR target_list IN or_test\n starred_item -> assignment_expression .[IDENTIFIER, ',', ']', '}']"
	}
	edge: {
		sourcename:	"135"
		targetname:	"230"
		label:	"ASYNC"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"135"
		targetname:	"231"
		label:	"FOR"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"135"
		targetname:	"232"
		label:	"comp_for"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"136"
		label:	"state 136\n power -> IDENTIFIER .[$end, IN, IS, AND, NOT, ASYNC, IF, OR, FOR, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ')', '<', '>', '&', '^']\n power -> IDENTIFIER . mypower\n mypower -> . POWER u_expr\n slicing -> IDENTIFIER . '[' slice_list ']'\n target_list -> IDENTIFIER . mytarget\n target_list -> IDENTIFIER . mytarget ','\n mytarget -> .['=', ')', ',']\n mytarget -> . mytarget ',' target\n mytarget -> . IDENTIFIER\n mytarget -> . mytarget ',' slicing\n mytarget -> . mytarget ',' '[' ']'\n mytarget -> . mytarget ',' '(' ')'\n assignment_expression -> IDENTIFIER . ASSIGN expression"
	}
	backedge: {
		sourcename:	"136"
		targetname:	"105"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"136"
		targetname:	"106"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"136"
		targetname:	"107"
		label:	"ASSIGN"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"136"
		targetname:	"121"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"136"
		targetname:	"123"
		label:	"mypower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"136"
		targetname:	"124"
		label:	"mytarget"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"137"
		label:	"state 137\n enclosure -> '(' ')' .[$end, IN, IS, AND, NOT, ASYNC, IF, OR, FOR, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, POWER, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ')', '<', '>', '&', '^', '[']\n target_list -> '(' ')' . mytarget\n target_list -> '(' ')' . mytarget ','\n mytarget -> .[$end, IN, '=', ')', ',', ']']\n mytarget -> . mytarget ',' target\n mytarget -> . IDENTIFIER\n mytarget -> . mytarget ',' slicing\n mytarget -> . mytarget ',' '[' ']'\n mytarget -> . mytarget ',' '(' ')'"
	}
	backedge: {
		sourcename:	"137"
		targetname:	"105"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"137"
		targetname:	"233"
		label:	"mytarget"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"138"
		label:	"state 138\n firstpower -> slicing .[$end, IN, IS, AND, NOT, ASYNC, IF, OR, FOR, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, POWER, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ')', '<', '>', '&', '^']\n slicing -> slicing . '[' slice_list ']'\n target_list -> slicing . mytarget\n target_list -> slicing . mytarget ','\n mytarget -> .['=', ')', ',']\n mytarget -> . mytarget ',' target\n mytarget -> . IDENTIFIER\n mytarget -> . mytarget ',' slicing\n mytarget -> . mytarget ',' '[' ']'\n mytarget -> . mytarget ',' '(' ')'"
	}
	backedge: {
		sourcename:	"138"
		targetname:	"105"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"138"
		targetname:	"182"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"138"
		targetname:	"184"
		label:	"mytarget"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"139"
		label:	"state 139\n parenth_form -> '(' starred_expression . ')'"
	}
	edge: {
		sourcename:	"139"
		targetname:	"234"
		label:	"')'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"140"
		label:	"state 140\n yield_atom -> '(' yield_expression . ')'"
	}
	edge: {
		sourcename:	"140"
		targetname:	"235"
		label:	"')'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"141"
		label:	"state 141\n generator_expression -> '(' expression . comp_for ')'\n starred_expression -> expression .[')']\n comp_for -> . ASYNC FOR target_list IN or_test comp_iter\n comp_for -> . FOR target_list IN or_test comp_iter\n comp_for -> . ASYNC FOR target_list IN or_test\n comp_for -> . FOR target_list IN or_test"
	}
	edge: {
		sourcename:	"141"
		targetname:	"230"
		label:	"ASYNC"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"141"
		targetname:	"231"
		label:	"FOR"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"141"
		targetname:	"236"
		label:	"comp_for"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"142"
		label:	"state 142\n target -> '(' target_list . ')'"
	}
	edge: {
		sourcename:	"142"
		targetname:	"237"
		label:	"')'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"143"
		label:	"state 143\n power -> IDENTIFIER .[IN, IS, AND, NOT, ASYNC, IF, OR, FOR, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ':', ')', '<', '>', '&', '^']\n power -> IDENTIFIER . mypower\n mypower -> . POWER u_expr\n slicing -> IDENTIFIER . '[' slice_list ']'\n assignment_expression -> IDENTIFIER . ASSIGN expression"
	}
	backedge: {
		sourcename:	"143"
		targetname:	"106"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"143"
		targetname:	"107"
		label:	"ASSIGN"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"143"
		targetname:	"121"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"143"
		targetname:	"123"
		label:	"mypower"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"144"
		label:	"state 144\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n dict_item -> POWER . or_expr\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"144"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"144"
		targetname:	"238"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"144"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"145"
		label:	"state 145\n dict_display -> '{' '}' ."
	}
	node: {
		title:	"146"
		label:	"state 146\n set_display -> '{' starred_list . '}'"
	}
	edge: {
		sourcename:	"146"
		targetname:	"239"
		label:	"'}'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"147"
		label:	"state 147\n set_display -> '{' comprehension . '}'"
	}
	edge: {
		sourcename:	"147"
		targetname:	"240"
		label:	"'}'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"148"
		label:	"state 148\n dict_display -> '{' dict_item_list . '}'"
	}
	edge: {
		sourcename:	"148"
		targetname:	"241"
		label:	"'}'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"149"
		label:	"state 149\n dict_display -> '{' dict_comprehension . '}'"
	}
	edge: {
		sourcename:	"149"
		targetname:	"242"
		label:	"'}'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"150"
		label:	"state 150\n dict_comprehension -> expression . ':' expression comp_for\n dict_item -> expression . ':' expression"
	}
	edge: {
		sourcename:	"150"
		targetname:	"243"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"151"
		label:	"state 151\n dict_item_list -> dict_item . mydictitem\n mydictitem -> .['}']\n mydictitem -> . ',' dict_item mydictitem\n mydictitem -> . ','"
	}
	edge: {
		sourcename:	"151"
		targetname:	"244"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"151"
		targetname:	"245"
		label:	"mydictitem"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"152"
		label:	"state 152\n $accept -> program $end ."
	}
	node: {
		title:	"153"
		label:	"state 153\n assignment_stmt -> mytargetlist starred_expression ."
	}
	node: {
		title:	"154"
		label:	"state 154\n assignment_stmt -> mytargetlist yield_expression ."
	}
	node: {
		title:	"155"
		label:	"state 155\n mytargetlist -> mytargetlist target_list . '='"
	}
	edge: {
		sourcename:	"155"
		targetname:	"246"
		label:	"'='"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"156"
		label:	"state 156\n and_expr -> and_expr '&' . shift_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"156"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"156"
		targetname:	"247"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"156"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"157"
		label:	"state 157\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> xor_expr '^' . and_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"157"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"157"
		targetname:	"248"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"157"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"158"
		label:	"state 158\n comp_operator -> IN ."
	}
	node: {
		title:	"159"
		label:	"state 159\n comp_operator -> IS .[AWAIT, IDENTIFIER, NUMBER, '+', '-', '~', '[', '(', '{']\n comp_operator -> IS . NOT"
	}
	edge: {
		sourcename:	"159"
		targetname:	"249"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"160"
		label:	"state 160\n comp_operator -> NOT . IN"
	}
	edge: {
		sourcename:	"160"
		targetname:	"250"
		label:	"IN"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"161"
		label:	"state 161\n comp_operator -> EQUAL ."
	}
	node: {
		title:	"162"
		label:	"state 162\n comp_operator -> NOTEQUAL ."
	}
	node: {
		title:	"163"
		label:	"state 163\n comp_operator -> GTE ."
	}
	node: {
		title:	"164"
		label:	"state 164\n comp_operator -> SME ."
	}
	node: {
		title:	"165"
		label:	"state 165\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> or_expr '|' . xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"165"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"165"
		targetname:	"251"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"165"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"166"
		label:	"state 166\n comp_operator -> '<' ."
	}
	node: {
		title:	"167"
		label:	"state 167\n comp_operator -> '>' ."
	}
	node: {
		title:	"168"
		label:	"state 168\n comparison -> or_expr mycomparison .[$end, ELSE, AND, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, ':', '=', ')', ',', ']', '}']\n mycomparison -> mycomparison . comp_operator or_expr\n comp_operator -> . '<'\n comp_operator -> . '>'\n comp_operator -> . EQUAL\n comp_operator -> . GTE\n comp_operator -> . SME\n comp_operator -> . NOTEQUAL\n comp_operator -> . IS\n comp_operator -> . IS NOT\n comp_operator -> . NOT IN\n comp_operator -> . IN"
	}
	backedge: {
		sourcename:	"168"
		targetname:	"158"
		label:	"IN"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"168"
		targetname:	"159"
		label:	"IS"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"168"
		targetname:	"160"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"168"
		targetname:	"161"
		label:	"EQUAL"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"168"
		targetname:	"162"
		label:	"NOTEQUAL"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"168"
		targetname:	"163"
		label:	"GTE"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"168"
		targetname:	"164"
		label:	"SME"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"168"
		targetname:	"166"
		label:	"'<'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"168"
		targetname:	"167"
		label:	"'>'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"168"
		targetname:	"252"
		label:	"comp_operator"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"169"
		label:	"state 169\n mycomparison -> comp_operator . or_expr\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"169"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"169"
		targetname:	"253"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"169"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"170"
		label:	"state 170\n shifter -> RIGHTSHIFT ."
	}
	node: {
		title:	"171"
		label:	"state 171\n shifter -> LEFTSHIFT ."
	}
	node: {
		title:	"172"
		label:	"state 172\n shift_expr -> shift_expr shifter . a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"172"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"172"
		targetname:	"254"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"172"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"173"
		label:	"state 173\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> m_expr INTDIVIDE . u_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"173"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"173"
		targetname:	"255"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"173"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"174"
		label:	"state 174\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> m_expr '*' . u_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"174"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"174"
		targetname:	"256"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"174"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"175"
		label:	"state 175\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> m_expr '@' . m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"175"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"175"
		targetname:	"257"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"175"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"176"
		label:	"state 176\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> m_expr '/' . u_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"176"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"176"
		targetname:	"258"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"176"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"177"
		label:	"state 177\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> m_expr '%' . u_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"177"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"177"
		targetname:	"259"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"177"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"178"
		label:	"state 178\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> a_expr '+' . m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"178"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"178"
		targetname:	"260"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"178"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"179"
		label:	"state 179\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> a_expr '-' . m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"179"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"179"
		targetname:	"261"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"179"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"180"
		label:	"state 180\n power -> firstpower mypower ."
	}
	node: {
		title:	"181"
		label:	"state 181\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> primary '[' . slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n slice_list -> . slice_item mysliceitem\n slice_item -> . expression\n slice_item -> . proper_slice\n proper_slice -> . ':'\n proper_slice -> . ':' ':'\n proper_slice -> . ':' ':' expression\n proper_slice -> . ':' expression ':'\n proper_slice -> . ':' expression ':' expression\n proper_slice -> . expression ':' expression ':' expression\n proper_slice -> . expression ':' expression\n proper_slice -> . expression ':' ':' expression\n proper_slice -> . expression ':' ':'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"181"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"181"
		targetname:	"216"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"181"
		targetname:	"262"
		label:	"slice_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"181"
		targetname:	"218"
		label:	"slice_item"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"181"
		targetname:	"219"
		label:	"proper_slice"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"181"
		targetname:	"220"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"181"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"182"
		label:	"state 182\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> slicing '[' . slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n slice_list -> . slice_item mysliceitem\n slice_item -> . expression\n slice_item -> . proper_slice\n proper_slice -> . ':'\n proper_slice -> . ':' ':'\n proper_slice -> . ':' ':' expression\n proper_slice -> . ':' expression ':'\n proper_slice -> . ':' expression ':' expression\n proper_slice -> . expression ':' expression ':' expression\n proper_slice -> . expression ':' expression\n proper_slice -> . expression ':' ':' expression\n proper_slice -> . expression ':' ':'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"182"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"182"
		targetname:	"216"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"182"
		targetname:	"263"
		label:	"slice_list"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"182"
		targetname:	"218"
		label:	"slice_item"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"182"
		targetname:	"219"
		label:	"proper_slice"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"182"
		targetname:	"220"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"182"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"183"
		label:	"state 183\n augmented_assignment_stmt -> slicing augop . expression_list\n augmented_assignment_stmt -> slicing augop . yield_expression\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n yield_expression -> . YIELD\n yield_expression -> . YIELD expression_list\n yield_expression -> . YIELD FROM expression\n expression -> . conditional_expression\n expression -> . lambda_expr\n expression_list -> . expression myexpression\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"183"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"8"
		label:	"YIELD"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"183"
		targetname:	"264"
		label:	"yield_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"84"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"183"
		targetname:	"265"
		label:	"expression_list"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"183"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"184"
		label:	"state 184\n target_list -> slicing mytarget .[$end, IN, '=', ')', ']']\n target_list -> slicing mytarget . ','\n mytarget -> mytarget . ',' target\n mytarget -> mytarget . ',' slicing\n mytarget -> mytarget . ',' '[' ']'\n mytarget -> mytarget . ',' '(' ')'"
	}
	edge: {
		sourcename:	"184"
		targetname:	"266"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"185"
		label:	"state 185\n assignment_expression -> IDENTIFIER . ASSIGN expression"
	}
	backedge: {
		sourcename:	"185"
		targetname:	"107"
		label:	"ASSIGN"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"186"
		label:	"state 186\n starred_item -> starred_item assignment_expression . ','"
	}
	edge: {
		sourcename:	"186"
		targetname:	"267"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"187"
		label:	"state 187\n mytargetlist -> target_list '=' ."
	}
	node: {
		title:	"188"
		label:	"state 188\n myif -> IF . or_test ELSE expression\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"188"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"188"
		targetname:	"268"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"188"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"189"
		label:	"state 189\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n or_test -> or_test OR . and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"189"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"189"
		targetname:	"269"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"189"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"190"
		label:	"state 190\n conditional_expression -> or_test myif ."
	}
	node: {
		title:	"191"
		label:	"state 191\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n and_test -> and_test AND . not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"191"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"191"
		targetname:	"270"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"191"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"192"
		label:	"state 192\n target_list -> target mytarget .[$end, IN, '=', ')', ']']\n target_list -> target mytarget . ','\n mytarget -> mytarget . ',' target\n mytarget -> mytarget . ',' slicing\n mytarget -> mytarget . ',' '[' ']'\n mytarget -> mytarget . ',' '(' ')'"
	}
	edge: {
		sourcename:	"192"
		targetname:	"271"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"193"
		label:	"state 193\n enclosure -> '[' ']' ."
	}
	node: {
		title:	"194"
		label:	"state 194\n enclosure -> '(' ')' ."
	}
	node: {
		title:	"195"
		label:	"state 195\n import_stmt -> IMPORT module AS . IDENTIFIER mymodule"
	}
	edge: {
		sourcename:	"195"
		targetname:	"272"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"196"
		label:	"state 196\n mymodule -> ',' . module mymodule\n mymodule -> ',' . module AS IDENTIFIER mymodule\n module -> . identifiermodule IDENTIFIER\n identifiermodule -> .\n identifiermodule -> . identifiermodule IDENTIFIER '.'"
	}
	edge: {
		sourcename:	"196"
		targetname:	"273"
		label:	"module"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"196"
		targetname:	"78"
		label:	"identifiermodule"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"197"
		label:	"state 197\n import_stmt -> IMPORT module mymodule ."
	}
	node: {
		title:	"198"
		label:	"state 198\n module -> identifiermodule IDENTIFIER .[$end, IMPORT, AS, ',']\n identifiermodule -> identifiermodule IDENTIFIER . '.'"
	}
	edge: {
		sourcename:	"198"
		targetname:	"274"
		label:	"'.'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"199"
		label:	"state 199\n raise_stmt -> RAISE expression FROM . expression\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"199"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"199"
		targetname:	"275"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"199"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"200"
		label:	"state 200\n yield_expression -> YIELD FROM expression ."
	}
	node: {
		title:	"201"
		label:	"state 201\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n myexpression -> ',' . expression myexpression\n myexpression -> ',' .[$end, ')']\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"201"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"201"
		targetname:	"276"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"201"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"202"
		label:	"state 202\n expression_list -> expression myexpression ."
	}
	node: {
		title:	"203"
		label:	"state 203\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n parameter -> IDENTIFIER ':' . expression\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"203"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"203"
		targetname:	"277"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"203"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"204"
		label:	"state 204\n parameter_list_starargs -> POWER parameter . ','\n parameter_list_starargs -> POWER parameter .[':']"
	}
	edge: {
		sourcename:	"204"
		targetname:	"278"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"205"
		label:	"state 205\n mydefparameter -> ',' . defparameter mydefparameter\n defparameter -> . parameter\n defparameter -> . parameter '=' expression\n parameter -> . IDENTIFIER\n parameter -> . IDENTIFIER ':' expression"
	}
	backedge: {
		sourcename:	"205"
		targetname:	"86"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"205"
		targetname:	"279"
		label:	"defparameter"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"205"
		targetname:	"94"
		label:	"parameter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"206"
		label:	"state 206\n parameter_list_starargs -> '*' mydefparameter . ',' POWER parameter ','\n parameter_list_starargs -> '*' mydefparameter . ',' POWER parameter\n parameter_list_starargs -> '*' mydefparameter . ','\n parameter_list_starargs -> '*' mydefparameter .[':']"
	}
	edge: {
		sourcename:	"206"
		targetname:	"280"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"207"
		label:	"state 207\n mydefparameter -> .[':']\n mydefparameter -> . ',' defparameter mydefparameter\n parameter_list_starargs -> '*' parameter . mydefparameter ',' POWER parameter ','\n parameter_list_starargs -> '*' parameter . mydefparameter ',' POWER parameter\n parameter_list_starargs -> '*' parameter . mydefparameter ','\n parameter_list_starargs -> '*' parameter . mydefparameter"
	}
	backedge: {
		sourcename:	"207"
		targetname:	"205"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"207"
		targetname:	"281"
		label:	"mydefparameter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"208"
		label:	"state 208\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n lambda_expr -> LAMBDA myparameterlist ':' . expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"208"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"208"
		targetname:	"282"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"208"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"209"
		label:	"state 209\n parameter_list -> defparameter mydefparameter . ',' '/' ',' parameter_list_no_posonly\n parameter_list -> defparameter mydefparameter . ',' '/' ','\n parameter_list -> defparameter mydefparameter . ',' '/'\n parameter_list_no_posonly -> defparameter mydefparameter . ',' parameter_list_starargs\n parameter_list_no_posonly -> defparameter mydefparameter . ','\n parameter_list_no_posonly -> defparameter mydefparameter .[':']"
	}
	edge: {
		sourcename:	"209"
		targetname:	"283"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"210"
		label:	"state 210\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n defparameter -> parameter '=' . expression\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"210"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"210"
		targetname:	"284"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"210"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"211"
		label:	"state 211\n relative_module -> '.' relative_module ."
	}
	node: {
		title:	"212"
		label:	"state 212\n import_stmt -> FROM relative_module IMPORT . IDENTIFIER AS IDENTIFIER mymoduleidentifier\n import_stmt -> FROM relative_module IMPORT . IDENTIFIER mymoduleidentifier\n import_stmt -> FROM relative_module IMPORT . '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> FROM relative_module IMPORT . '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier ')'\n import_stmt -> FROM relative_module IMPORT . '(' IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> FROM relative_module IMPORT . '(' IDENTIFIER mymoduleidentifier ')'\n import_stmt -> FROM relative_module IMPORT . '*'"
	}
	edge: {
		sourcename:	"212"
		targetname:	"285"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"212"
		targetname:	"286"
		label:	"'*'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"212"
		targetname:	"287"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"213"
		label:	"state 213\n assert_stmt -> ASSERT expression ',' . expression\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"213"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"213"
		targetname:	"288"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"213"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"214"
		label:	"state 214\n mypower -> POWER u_expr ."
	}
	node: {
		title:	"215"
		label:	"state 215\n assignment_expression -> IDENTIFIER ASSIGN expression ."
	}
	node: {
		title:	"216"
		label:	"state 216\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n proper_slice -> ':' .[',', ']']\n proper_slice -> ':' . ':'\n proper_slice -> ':' . ':' expression\n proper_slice -> ':' . expression ':'\n proper_slice -> ':' . expression ':' expression\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"216"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"216"
		targetname:	"289"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"216"
		targetname:	"290"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"216"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"217"
		label:	"state 217\n slicing -> IDENTIFIER '[' slice_list . ']'"
	}
	edge: {
		sourcename:	"217"
		targetname:	"291"
		label:	"']'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"218"
		label:	"state 218\n slice_list -> slice_item . mysliceitem\n mysliceitem -> .[']']\n mysliceitem -> . ',' slice_item mysliceitem\n mysliceitem -> . ','"
	}
	edge: {
		sourcename:	"218"
		targetname:	"292"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"218"
		targetname:	"293"
		label:	"mysliceitem"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"219"
		label:	"state 219\n slice_item -> proper_slice ."
	}
	node: {
		title:	"220"
		label:	"state 220\n slice_item -> expression .[',', ']']\n proper_slice -> expression . ':' expression ':' expression\n proper_slice -> expression . ':' expression\n proper_slice -> expression . ':' ':' expression\n proper_slice -> expression . ':' ':'"
	}
	edge: {
		sourcename:	"220"
		targetname:	"294"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"221"
		label:	"state 221\n augmented_assignment_stmt -> IDENTIFIER augop yield_expression ."
	}
	node: {
		title:	"222"
		label:	"state 222\n augmented_assignment_stmt -> IDENTIFIER augop expression_list ."
	}
	node: {
		title:	"223"
		label:	"state 223\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n target_list -> IDENTIFIER mytarget ',' .[$end, IN, '=', ')', ']']\n mytarget -> mytarget ',' . target\n mytarget -> mytarget ',' . slicing\n mytarget -> mytarget ',' . '[' ']'\n mytarget -> mytarget ',' . '(' ')'\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	edge: {
		sourcename:	"223"
		targetname:	"295"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"223"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"223"
		targetname:	"296"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"223"
		targetname:	"297"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"223"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"223"
		targetname:	"101"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"223"
		targetname:	"298"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"223"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"223"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"223"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"223"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"223"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"223"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"223"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"223"
		targetname:	"299"
		label:	"target"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"223"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"224"
		label:	"state 224\n target_list -> '[' ']' mytarget .[$end, IN, '=', ')', ']']\n target_list -> '[' ']' mytarget . ','\n mytarget -> mytarget . ',' target\n mytarget -> mytarget . ',' slicing\n mytarget -> mytarget . ',' '[' ']'\n mytarget -> mytarget . ',' '(' ')'"
	}
	edge: {
		sourcename:	"224"
		targetname:	"300"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"225"
		label:	"state 225\n list_display -> '[' starred_list ']' ."
	}
	node: {
		title:	"226"
		label:	"state 226\n list_display -> '[' comprehension ']' ."
	}
	node: {
		title:	"227"
		label:	"state 227\n starred_item -> . starred_item assignment_expression ','\n starred_item -> . assignment_expression\n mystarreditem -> ',' . starred_item mystarreditem\n mystarreditem -> ',' .[']', '}']\n assignment_expression -> . IDENTIFIER ASSIGN expression"
	}
	backedge: {
		sourcename:	"227"
		targetname:	"185"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"227"
		targetname:	"301"
		label:	"starred_item"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"227"
		targetname:	"67"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"228"
		label:	"state 228\n starred_list -> starred_item mystarreditem ."
	}
	node: {
		title:	"229"
		label:	"state 229\n target -> '[' target_list ']' ."
	}
	node: {
		title:	"230"
		label:	"state 230\n comp_for -> ASYNC . FOR target_list IN or_test comp_iter\n comp_for -> ASYNC . FOR target_list IN or_test"
	}
	edge: {
		sourcename:	"230"
		targetname:	"302"
		label:	"FOR"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"231"
		label:	"state 231\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n comp_for -> FOR . target_list IN or_test comp_iter\n comp_for -> FOR . target_list IN or_test\n target_list -> . target mytarget\n target_list -> . target mytarget ','\n target_list -> . slicing mytarget\n target_list -> . slicing mytarget ','\n target_list -> . '[' ']' mytarget\n target_list -> . '[' ']' mytarget ','\n target_list -> . '(' ')' mytarget\n target_list -> . '(' ')' mytarget ','\n target_list -> . IDENTIFIER mytarget\n target_list -> . IDENTIFIER mytarget ','\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"231"
		targetname:	"100"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"21"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"22"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"101"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"102"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"231"
		targetname:	"303"
		label:	"target_list"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"66"
		label:	"target"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"231"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"232"
		label:	"state 232\n comprehension -> assignment_expression comp_for ."
	}
	node: {
		title:	"233"
		label:	"state 233\n target_list -> '(' ')' mytarget .[$end, IN, '=', ')', ']']\n target_list -> '(' ')' mytarget . ','\n mytarget -> mytarget . ',' target\n mytarget -> mytarget . ',' slicing\n mytarget -> mytarget . ',' '[' ']'\n mytarget -> mytarget . ',' '(' ')'"
	}
	edge: {
		sourcename:	"233"
		targetname:	"304"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"234"
		label:	"state 234\n parenth_form -> '(' starred_expression ')' ."
	}
	node: {
		title:	"235"
		label:	"state 235\n yield_atom -> '(' yield_expression ')' ."
	}
	node: {
		title:	"236"
		label:	"state 236\n generator_expression -> '(' expression comp_for . ')'"
	}
	edge: {
		sourcename:	"236"
		targetname:	"305"
		label:	"')'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"237"
		label:	"state 237\n target -> '(' target_list ')' ."
	}
	node: {
		title:	"238"
		label:	"state 238\n or_expr -> or_expr . '|' xor_expr\n dict_item -> POWER or_expr .[',', '}']"
	}
	backedge: {
		sourcename:	"238"
		targetname:	"165"
		label:	"'|'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"239"
		label:	"state 239\n set_display -> '{' starred_list '}' ."
	}
	node: {
		title:	"240"
		label:	"state 240\n set_display -> '{' comprehension '}' ."
	}
	node: {
		title:	"241"
		label:	"state 241\n dict_display -> '{' dict_item_list '}' ."
	}
	node: {
		title:	"242"
		label:	"state 242\n dict_display -> '{' dict_comprehension '}' ."
	}
	node: {
		title:	"243"
		label:	"state 243\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n dict_comprehension -> expression ':' . expression comp_for\n expression -> . conditional_expression\n expression -> . lambda_expr\n dict_item -> expression ':' . expression\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"243"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"243"
		targetname:	"306"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"243"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"244"
		label:	"state 244\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n dict_item -> . expression ':' expression\n dict_item -> . POWER or_expr\n mydictitem -> ',' . dict_item mydictitem\n mydictitem -> ',' .['}']\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"244"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"144"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"244"
		targetname:	"307"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"244"
		targetname:	"308"
		label:	"dict_item"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"244"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"245"
		label:	"state 245\n dict_item_list -> dict_item mydictitem ."
	}
	node: {
		title:	"246"
		label:	"state 246\n mytargetlist -> mytargetlist target_list '=' ."
	}
	node: {
		title:	"247"
		label:	"state 247\n and_expr -> and_expr '&' shift_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n shift_expr -> shift_expr . shifter a_expr\n shifter -> . LEFTSHIFT\n shifter -> . RIGHTSHIFT"
	}
	backedge: {
		sourcename:	"247"
		targetname:	"170"
		label:	"RIGHTSHIFT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"247"
		targetname:	"171"
		label:	"LEFTSHIFT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"247"
		targetname:	"172"
		label:	"shifter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"248"
		label:	"state 248\n and_expr -> and_expr . '&' shift_expr\n xor_expr -> xor_expr '^' and_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, '|', ':', '=', ')', ',', '<', '>', '^', ']', '}']"
	}
	backedge: {
		sourcename:	"248"
		targetname:	"156"
		label:	"'&'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"249"
		label:	"state 249\n comp_operator -> IS NOT ."
	}
	node: {
		title:	"250"
		label:	"state 250\n comp_operator -> NOT IN ."
	}
	node: {
		title:	"251"
		label:	"state 251\n xor_expr -> xor_expr . '^' and_expr\n or_expr -> or_expr '|' xor_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, '|', ':', '=', ')', ',', '<', '>', ']', '}']"
	}
	backedge: {
		sourcename:	"251"
		targetname:	"157"
		label:	"'^'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"252"
		label:	"state 252\n mycomparison -> mycomparison comp_operator . or_expr\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"252"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"252"
		targetname:	"309"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"252"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"253"
		label:	"state 253\n mycomparison -> comp_operator or_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, ':', '=', ')', ',', '<', '>', ']', '}']\n or_expr -> or_expr . '|' xor_expr"
	}
	backedge: {
		sourcename:	"253"
		targetname:	"165"
		label:	"'|'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"254"
		label:	"state 254\n shift_expr -> shift_expr shifter a_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, RIGHTSHIFT, LEFTSHIFT, '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n a_expr -> a_expr . '+' m_expr\n a_expr -> a_expr . '-' m_expr"
	}
	backedge: {
		sourcename:	"254"
		targetname:	"178"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"254"
		targetname:	"179"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"255"
		label:	"state 255\n m_expr -> m_expr INTDIVIDE u_expr ."
	}
	node: {
		title:	"256"
		label:	"state 256\n m_expr -> m_expr '*' u_expr ."
	}
	node: {
		title:	"257"
		label:	"state 257\n m_expr -> m_expr . '*' u_expr\n m_expr -> m_expr . '@' m_expr[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n m_expr -> m_expr '@' m_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, INTDIVIDE, RIGHTSHIFT, LEFTSHIFT, '+', '-', '*', '@', '/', '%', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']\n m_expr -> m_expr . INTDIVIDE u_expr\n m_expr -> m_expr . '/' u_expr\n m_expr -> m_expr . '%' u_expr"
	}
	node: {
		title:	"258"
		label:	"state 258\n m_expr -> m_expr '/' u_expr ."
	}
	node: {
		title:	"259"
		label:	"state 259\n m_expr -> m_expr '%' u_expr ."
	}
	node: {
		title:	"260"
		label:	"state 260\n m_expr -> m_expr . '*' u_expr\n m_expr -> m_expr . '@' m_expr\n m_expr -> m_expr . INTDIVIDE u_expr\n m_expr -> m_expr . '/' u_expr\n m_expr -> m_expr . '%' u_expr\n a_expr -> a_expr '+' m_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, RIGHTSHIFT, LEFTSHIFT, '+', '-', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']"
	}
	backedge: {
		sourcename:	"260"
		targetname:	"173"
		label:	"INTDIVIDE"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"260"
		targetname:	"174"
		label:	"'*'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"260"
		targetname:	"175"
		label:	"'@'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"260"
		targetname:	"176"
		label:	"'/'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"260"
		targetname:	"177"
		label:	"'%'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"261"
		label:	"state 261\n m_expr -> m_expr . '*' u_expr\n m_expr -> m_expr . '@' m_expr\n m_expr -> m_expr . INTDIVIDE u_expr\n m_expr -> m_expr . '/' u_expr\n m_expr -> m_expr . '%' u_expr\n a_expr -> a_expr '-' m_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, RIGHTSHIFT, LEFTSHIFT, '+', '-', '|', ':', '=', ')', ',', '<', '>', '&', '^', ']', '}']"
	}
	backedge: {
		sourcename:	"261"
		targetname:	"173"
		label:	"INTDIVIDE"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"261"
		targetname:	"174"
		label:	"'*'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"261"
		targetname:	"175"
		label:	"'@'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"261"
		targetname:	"176"
		label:	"'/'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"261"
		targetname:	"177"
		label:	"'%'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"262"
		label:	"state 262\n slicing -> primary '[' slice_list . ']'"
	}
	edge: {
		sourcename:	"262"
		targetname:	"310"
		label:	"']'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"263"
		label:	"state 263\n slicing -> slicing '[' slice_list . ']'"
	}
	edge: {
		sourcename:	"263"
		targetname:	"311"
		label:	"']'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"264"
		label:	"state 264\n augmented_assignment_stmt -> slicing augop yield_expression ."
	}
	node: {
		title:	"265"
		label:	"state 265\n augmented_assignment_stmt -> slicing augop expression_list ."
	}
	node: {
		title:	"266"
		label:	"state 266\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n target_list -> slicing mytarget ',' .[$end, IN, '=', ')', ']']\n mytarget -> mytarget ',' . target\n mytarget -> mytarget ',' . slicing\n mytarget -> mytarget ',' . '[' ']'\n mytarget -> mytarget ',' . '(' ')'\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	edge: {
		sourcename:	"266"
		targetname:	"295"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"266"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"266"
		targetname:	"296"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"266"
		targetname:	"297"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"266"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"266"
		targetname:	"101"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"266"
		targetname:	"298"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"266"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"266"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"266"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"266"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"266"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"266"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"266"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"266"
		targetname:	"299"
		label:	"target"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"266"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"267"
		label:	"state 267\n starred_item -> starred_item assignment_expression ',' ."
	}
	node: {
		title:	"268"
		label:	"state 268\n myif -> IF or_test . ELSE expression\n or_test -> or_test . OR and_test"
	}
	edge: {
		sourcename:	"268"
		targetname:	"312"
		label:	"ELSE"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"268"
		targetname:	"189"
		label:	"OR"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"269"
		label:	"state 269\n or_test -> or_test OR and_test .[$end, ELSE, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, ':', '=', ')', ',', ']', '}']\n and_test -> and_test . AND not_test"
	}
	backedge: {
		sourcename:	"269"
		targetname:	"191"
		label:	"AND"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"270"
		label:	"state 270\n and_test -> and_test AND not_test ."
	}
	node: {
		title:	"271"
		label:	"state 271\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n target_list -> target mytarget ',' .[$end, IN, '=', ')', ']']\n mytarget -> mytarget ',' . target\n mytarget -> mytarget ',' . slicing\n mytarget -> mytarget ',' . '[' ']'\n mytarget -> mytarget ',' . '(' ')'\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	edge: {
		sourcename:	"271"
		targetname:	"295"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"271"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"271"
		targetname:	"296"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"271"
		targetname:	"297"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"271"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"271"
		targetname:	"101"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"271"
		targetname:	"298"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"271"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"271"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"271"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"271"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"271"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"271"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"271"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"271"
		targetname:	"299"
		label:	"target"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"271"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"272"
		label:	"state 272\n import_stmt -> IMPORT module AS IDENTIFIER . mymodule\n mymodule -> .[$end]\n mymodule -> . ',' module mymodule\n mymodule -> . ',' module AS IDENTIFIER mymodule"
	}
	backedge: {
		sourcename:	"272"
		targetname:	"196"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"272"
		targetname:	"313"
		label:	"mymodule"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"273"
		label:	"state 273\n mymodule -> .[$end]\n mymodule -> . ',' module mymodule\n mymodule -> ',' module . mymodule\n mymodule -> . ',' module AS IDENTIFIER mymodule\n mymodule -> ',' module . AS IDENTIFIER mymodule"
	}
	edge: {
		sourcename:	"273"
		targetname:	"314"
		label:	"AS"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"273"
		targetname:	"196"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"273"
		targetname:	"315"
		label:	"mymodule"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"274"
		label:	"state 274\n identifiermodule -> identifiermodule IDENTIFIER '.' ."
	}
	node: {
		title:	"275"
		label:	"state 275\n raise_stmt -> RAISE expression FROM expression ."
	}
	node: {
		title:	"276"
		label:	"state 276\n myexpression -> .[$end, ')']\n myexpression -> . ',' expression myexpression\n myexpression -> ',' expression . myexpression\n myexpression -> . ','"
	}
	backedge: {
		sourcename:	"276"
		targetname:	"201"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"276"
		targetname:	"316"
		label:	"myexpression"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"277"
		label:	"state 277\n parameter -> IDENTIFIER ':' expression ."
	}
	node: {
		title:	"278"
		label:	"state 278\n parameter_list_starargs -> POWER parameter ',' ."
	}
	node: {
		title:	"279"
		label:	"state 279\n mydefparameter -> .[':']\n mydefparameter -> . ',' defparameter mydefparameter\n mydefparameter -> ',' defparameter . mydefparameter"
	}
	backedge: {
		sourcename:	"279"
		targetname:	"205"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"279"
		targetname:	"317"
		label:	"mydefparameter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"280"
		label:	"state 280\n parameter_list_starargs -> '*' mydefparameter ',' . POWER parameter ','\n parameter_list_starargs -> '*' mydefparameter ',' . POWER parameter\n parameter_list_starargs -> '*' mydefparameter ',' .[':']"
	}
	edge: {
		sourcename:	"280"
		targetname:	"318"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"281"
		label:	"state 281\n parameter_list_starargs -> '*' parameter mydefparameter . ',' POWER parameter ','\n parameter_list_starargs -> '*' parameter mydefparameter . ',' POWER parameter\n parameter_list_starargs -> '*' parameter mydefparameter . ','\n parameter_list_starargs -> '*' parameter mydefparameter .[':']"
	}
	edge: {
		sourcename:	"281"
		targetname:	"319"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"282"
		label:	"state 282\n lambda_expr -> LAMBDA myparameterlist ':' expression ."
	}
	node: {
		title:	"283"
		label:	"state 283\n parameter_list -> defparameter mydefparameter ',' . '/' ',' parameter_list_no_posonly\n parameter_list -> defparameter mydefparameter ',' . '/' ','\n parameter_list -> defparameter mydefparameter ',' . '/'\n parameter_list_no_posonly -> defparameter mydefparameter ',' . parameter_list_starargs\n parameter_list_no_posonly -> defparameter mydefparameter ',' .[':']\n parameter_list_starargs -> . '*' parameter mydefparameter ',' POWER parameter ','\n parameter_list_starargs -> . '*' parameter mydefparameter ',' POWER parameter\n parameter_list_starargs -> . '*' parameter mydefparameter ','\n parameter_list_starargs -> . '*' parameter mydefparameter\n parameter_list_starargs -> . '*' mydefparameter ',' POWER parameter ','\n parameter_list_starargs -> . '*' mydefparameter ',' POWER parameter\n parameter_list_starargs -> . '*' mydefparameter ','\n parameter_list_starargs -> . '*' mydefparameter\n parameter_list_starargs -> . POWER parameter ','\n parameter_list_starargs -> . POWER parameter"
	}
	backedge: {
		sourcename:	"283"
		targetname:	"87"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"283"
		targetname:	"88"
		label:	"'*'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"283"
		targetname:	"320"
		label:	"'/'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"283"
		targetname:	"321"
		label:	"parameter_list_starargs"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"284"
		label:	"state 284\n defparameter -> parameter '=' expression ."
	}
	node: {
		title:	"285"
		label:	"state 285\n import_stmt -> FROM relative_module IMPORT IDENTIFIER . AS IDENTIFIER mymoduleidentifier\n import_stmt -> FROM relative_module IMPORT IDENTIFIER . mymoduleidentifier\n mymoduleidentifier -> .[$end]\n mymoduleidentifier -> . IDENTIFIER\n mymoduleidentifier -> . mymoduleidentifier AS IDENTIFIER"
	}
	edge: {
		sourcename:	"285"
		targetname:	"322"
		label:	"AS"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"285"
		targetname:	"323"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"285"
		targetname:	"324"
		label:	"mymoduleidentifier"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"286"
		label:	"state 286\n import_stmt -> FROM relative_module IMPORT '*' ."
	}
	node: {
		title:	"287"
		label:	"state 287\n import_stmt -> FROM relative_module IMPORT '(' . IDENTIFIER AS IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> FROM relative_module IMPORT '(' . IDENTIFIER AS IDENTIFIER mymoduleidentifier ')'\n import_stmt -> FROM relative_module IMPORT '(' . IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> FROM relative_module IMPORT '(' . IDENTIFIER mymoduleidentifier ')'"
	}
	edge: {
		sourcename:	"287"
		targetname:	"325"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"288"
		label:	"state 288\n assert_stmt -> ASSERT expression ',' expression ."
	}
	node: {
		title:	"289"
		label:	"state 289\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n proper_slice -> ':' ':' .[',', ']']\n proper_slice -> ':' ':' . expression\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"289"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"289"
		targetname:	"326"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"289"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"290"
		label:	"state 290\n proper_slice -> ':' expression . ':'\n proper_slice -> ':' expression . ':' expression"
	}
	edge: {
		sourcename:	"290"
		targetname:	"327"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"291"
		label:	"state 291\n slicing -> IDENTIFIER '[' slice_list ']' ."
	}
	node: {
		title:	"292"
		label:	"state 292\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n mysliceitem -> ',' . slice_item mysliceitem\n mysliceitem -> ',' .[']']\n slice_item -> . expression\n slice_item -> . proper_slice\n proper_slice -> . ':'\n proper_slice -> . ':' ':'\n proper_slice -> . ':' ':' expression\n proper_slice -> . ':' expression ':'\n proper_slice -> . ':' expression ':' expression\n proper_slice -> . expression ':' expression ':' expression\n proper_slice -> . expression ':' expression\n proper_slice -> . expression ':' ':' expression\n proper_slice -> . expression ':' ':'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"292"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"216"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"292"
		targetname:	"328"
		label:	"slice_item"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"219"
		label:	"proper_slice"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"220"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"292"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"293"
		label:	"state 293\n slice_list -> slice_item mysliceitem ."
	}
	node: {
		title:	"294"
		label:	"state 294\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n proper_slice -> expression ':' . expression ':' expression\n proper_slice -> expression ':' . expression\n proper_slice -> expression ':' . ':' expression\n proper_slice -> expression ':' . ':'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"294"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"294"
		targetname:	"329"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"294"
		targetname:	"330"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"294"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"295"
		label:	"state 295\n slicing -> IDENTIFIER . '[' slice_list ']'"
	}
	backedge: {
		sourcename:	"295"
		targetname:	"121"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"296"
		label:	"state 296\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> '[' . ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> '[' . starred_list ']'\n list_display -> . '[' comprehension ']'\n list_display -> '[' . comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n starred_list -> . starred_item mystarreditem\n comprehension -> . assignment_expression comp_for\n starred_item -> . starred_item assignment_expression ','\n starred_item -> . assignment_expression\n target_list -> . target mytarget\n target_list -> . target mytarget ','\n target_list -> . slicing mytarget\n target_list -> . slicing mytarget ','\n target_list -> . '[' ']' mytarget\n target_list -> . '[' ']' mytarget ','\n target_list -> . '(' ')' mytarget\n target_list -> . '(' ')' mytarget ','\n target_list -> . IDENTIFIER mytarget\n target_list -> . IDENTIFIER mytarget ','\n mytarget -> mytarget ',' '[' . ']'\n target -> . '[' target_list ']'\n target -> '[' . target_list ']'\n target -> . '(' target_list ')'\n assignment_expression -> . IDENTIFIER ASSIGN expression\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"296"
		targetname:	"129"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"21"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"296"
		targetname:	"331"
		label:	"']'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"22"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"101"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"102"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"131"
		label:	"starred_list"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"132"
		label:	"comprehension"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"133"
		label:	"starred_item"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"134"
		label:	"target_list"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"66"
		label:	"target"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"135"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"296"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"297"
		label:	"state 297\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n enclosure -> '(' . ')'\n parenth_form -> . '(' starred_expression ')'\n parenth_form -> '(' . starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n generator_expression -> '(' . expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n yield_atom -> '(' . yield_expression ')'\n starred_expression -> . expression\n starred_expression -> . starred_item\n yield_expression -> . YIELD\n yield_expression -> . YIELD expression_list\n yield_expression -> . YIELD FROM expression\n expression -> . conditional_expression\n expression -> . lambda_expr\n starred_item -> . starred_item assignment_expression ','\n starred_item -> . assignment_expression\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n target_list -> . target mytarget\n target_list -> . target mytarget ','\n target_list -> . slicing mytarget\n target_list -> . slicing mytarget ','\n target_list -> . '[' ']' mytarget\n target_list -> . '[' ']' mytarget ','\n target_list -> . '(' ')' mytarget\n target_list -> . '(' ')' mytarget ','\n target_list -> . IDENTIFIER mytarget\n target_list -> . IDENTIFIER mytarget ','\n mytarget -> mytarget ',' '(' . ')'\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n target -> '(' . target_list ')'\n assignment_expression -> . IDENTIFIER ASSIGN expression\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"297"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"8"
		label:	"YIELD"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"136"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"297"
		targetname:	"332"
		label:	"')'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"21"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"22"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"138"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"139"
		label:	"starred_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"140"
		label:	"yield_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"141"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"59"
		label:	"starred_item"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"142"
		label:	"target_list"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"66"
		label:	"target"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"67"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"297"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"298"
		label:	"state 298\n slicing -> slicing . '[' slice_list ']'\n mytarget -> mytarget ',' slicing .[$end, IN, '=', ')', ',', ']']"
	}
	backedge: {
		sourcename:	"298"
		targetname:	"182"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"299"
		label:	"state 299\n mytarget -> mytarget ',' target ."
	}
	node: {
		title:	"300"
		label:	"state 300\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n target_list -> '[' ']' mytarget ',' .[$end, IN, '=', ')', ']']\n mytarget -> mytarget ',' . target\n mytarget -> mytarget ',' . slicing\n mytarget -> mytarget ',' . '[' ']'\n mytarget -> mytarget ',' . '(' ')'\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"300"
		targetname:	"295"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"296"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"297"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"101"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"298"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"299"
		label:	"target"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"300"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"301"
		label:	"state 301\n starred_item -> starred_item . assignment_expression ','\n mystarreditem -> .[']', '}']\n mystarreditem -> . ',' starred_item mystarreditem\n mystarreditem -> ',' starred_item . mystarreditem\n mystarreditem -> . ','\n assignment_expression -> . IDENTIFIER ASSIGN expression"
	}
	backedge: {
		sourcename:	"301"
		targetname:	"185"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"301"
		targetname:	"227"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"301"
		targetname:	"333"
		label:	"mystarreditem"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"301"
		targetname:	"186"
		label:	"assignment_expression"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"302"
		label:	"state 302\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n comp_for -> ASYNC FOR . target_list IN or_test comp_iter\n comp_for -> ASYNC FOR . target_list IN or_test\n target_list -> . target mytarget\n target_list -> . target mytarget ','\n target_list -> . slicing mytarget\n target_list -> . slicing mytarget ','\n target_list -> . '[' ']' mytarget\n target_list -> . '[' ']' mytarget ','\n target_list -> . '(' ')' mytarget\n target_list -> . '(' ')' mytarget ','\n target_list -> . IDENTIFIER mytarget\n target_list -> . IDENTIFIER mytarget ','\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"302"
		targetname:	"100"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"21"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"22"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"101"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"102"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"302"
		targetname:	"334"
		label:	"target_list"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"66"
		label:	"target"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"302"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"303"
		label:	"state 303\n comp_for -> FOR target_list . IN or_test comp_iter\n comp_for -> FOR target_list . IN or_test"
	}
	edge: {
		sourcename:	"303"
		targetname:	"335"
		label:	"IN"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"304"
		label:	"state 304\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n target_list -> '(' ')' mytarget ',' .[$end, IN, '=', ')', ']']\n mytarget -> mytarget ',' . target\n mytarget -> mytarget ',' . slicing\n mytarget -> mytarget ',' . '[' ']'\n mytarget -> mytarget ',' . '(' ')'\n target -> . '[' target_list ']'\n target -> . '(' target_list ')'\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"304"
		targetname:	"295"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"296"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"297"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"101"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"298"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"299"
		label:	"target"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"304"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"305"
		label:	"state 305\n generator_expression -> '(' expression comp_for ')' ."
	}
	node: {
		title:	"306"
		label:	"state 306\n dict_comprehension -> expression ':' expression . comp_for\n comp_for -> . ASYNC FOR target_list IN or_test comp_iter\n comp_for -> . FOR target_list IN or_test comp_iter\n comp_for -> . ASYNC FOR target_list IN or_test\n comp_for -> . FOR target_list IN or_test\n dict_item -> expression ':' expression .[',', '}']"
	}
	backedge: {
		sourcename:	"306"
		targetname:	"230"
		label:	"ASYNC"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"306"
		targetname:	"231"
		label:	"FOR"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"306"
		targetname:	"336"
		label:	"comp_for"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"307"
		label:	"state 307\n dict_item -> expression . ':' expression"
	}
	edge: {
		sourcename:	"307"
		targetname:	"337"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"308"
		label:	"state 308\n mydictitem -> .['}']\n mydictitem -> . ',' dict_item mydictitem\n mydictitem -> ',' dict_item . mydictitem\n mydictitem -> . ','"
	}
	backedge: {
		sourcename:	"308"
		targetname:	"244"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"308"
		targetname:	"338"
		label:	"mydictitem"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"309"
		label:	"state 309\n mycomparison -> mycomparison comp_operator or_expr .[$end, ELSE, IN, IS, AND, NOT, ASYNC, IF, OR, FROM, FOR, IDENTIFIER, EQUAL, NOTEQUAL, GTE, SME, ':', '=', ')', ',', '<', '>', ']', '}']\n or_expr -> or_expr . '|' xor_expr"
	}
	backedge: {
		sourcename:	"309"
		targetname:	"165"
		label:	"'|'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"310"
		label:	"state 310\n slicing -> primary '[' slice_list ']' ."
	}
	node: {
		title:	"311"
		label:	"state 311\n slicing -> slicing '[' slice_list ']' ."
	}
	node: {
		title:	"312"
		label:	"state 312\n myif -> IF or_test ELSE . expression\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"312"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"312"
		targetname:	"339"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"312"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"313"
		label:	"state 313\n import_stmt -> IMPORT module AS IDENTIFIER mymodule ."
	}
	node: {
		title:	"314"
		label:	"state 314\n mymodule -> ',' module AS . IDENTIFIER mymodule"
	}
	edge: {
		sourcename:	"314"
		targetname:	"340"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"315"
		label:	"state 315\n mymodule -> ',' module mymodule ."
	}
	node: {
		title:	"316"
		label:	"state 316\n myexpression -> ',' expression myexpression ."
	}
	node: {
		title:	"317"
		label:	"state 317\n mydefparameter -> ',' defparameter mydefparameter ."
	}
	node: {
		title:	"318"
		label:	"state 318\n parameter_list_starargs -> '*' mydefparameter ',' POWER . parameter ','\n parameter_list_starargs -> '*' mydefparameter ',' POWER . parameter\n parameter -> . IDENTIFIER\n parameter -> . IDENTIFIER ':' expression"
	}
	backedge: {
		sourcename:	"318"
		targetname:	"86"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"318"
		targetname:	"341"
		label:	"parameter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"319"
		label:	"state 319\n parameter_list_starargs -> '*' parameter mydefparameter ',' . POWER parameter ','\n parameter_list_starargs -> '*' parameter mydefparameter ',' . POWER parameter\n parameter_list_starargs -> '*' parameter mydefparameter ',' .[':']"
	}
	edge: {
		sourcename:	"319"
		targetname:	"342"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"320"
		label:	"state 320\n parameter_list -> defparameter mydefparameter ',' '/' . ',' parameter_list_no_posonly\n parameter_list -> defparameter mydefparameter ',' '/' . ','\n parameter_list -> defparameter mydefparameter ',' '/' .[':']"
	}
	edge: {
		sourcename:	"320"
		targetname:	"343"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"321"
		label:	"state 321\n parameter_list_no_posonly -> defparameter mydefparameter ',' parameter_list_starargs ."
	}
	node: {
		title:	"322"
		label:	"state 322\n import_stmt -> FROM relative_module IMPORT IDENTIFIER AS . IDENTIFIER mymoduleidentifier"
	}
	edge: {
		sourcename:	"322"
		targetname:	"344"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"323"
		label:	"state 323\n mymoduleidentifier -> IDENTIFIER ."
	}
	node: {
		title:	"324"
		label:	"state 324\n import_stmt -> FROM relative_module IMPORT IDENTIFIER mymoduleidentifier .[$end]\n mymoduleidentifier -> mymoduleidentifier . AS IDENTIFIER"
	}
	edge: {
		sourcename:	"324"
		targetname:	"345"
		label:	"AS"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"325"
		label:	"state 325\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER . AS IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER . AS IDENTIFIER mymoduleidentifier ')'\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER . mymoduleidentifier ',' ')'\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER . mymoduleidentifier ')'\n mymoduleidentifier -> .[')', ',']\n mymoduleidentifier -> . IDENTIFIER\n mymoduleidentifier -> . mymoduleidentifier AS IDENTIFIER"
	}
	edge: {
		sourcename:	"325"
		targetname:	"346"
		label:	"AS"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"325"
		targetname:	"323"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"325"
		targetname:	"347"
		label:	"mymoduleidentifier"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"326"
		label:	"state 326\n proper_slice -> ':' ':' expression ."
	}
	node: {
		title:	"327"
		label:	"state 327\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n proper_slice -> ':' expression ':' .[',', ']']\n proper_slice -> ':' expression ':' . expression\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"327"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"327"
		targetname:	"348"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"327"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"328"
		label:	"state 328\n mysliceitem -> .[']']\n mysliceitem -> . ',' slice_item mysliceitem\n mysliceitem -> ',' slice_item . mysliceitem\n mysliceitem -> . ','"
	}
	backedge: {
		sourcename:	"328"
		targetname:	"292"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"328"
		targetname:	"349"
		label:	"mysliceitem"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"329"
		label:	"state 329\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n proper_slice -> expression ':' ':' . expression\n proper_slice -> expression ':' ':' .[',', ']']\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"329"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"329"
		targetname:	"350"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"329"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"330"
		label:	"state 330\n proper_slice -> expression ':' expression . ':' expression\n proper_slice -> expression ':' expression .[',', ']']"
	}
	edge: {
		sourcename:	"330"
		targetname:	"351"
		label:	"':'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"331"
		label:	"state 331\n enclosure -> '[' ']' .['[']\n mytarget -> mytarget ',' '[' ']' .[$end, IN, '=', ')', ',', ']']"
	}
	node: {
		title:	"332"
		label:	"state 332\n enclosure -> '(' ')' .['[']\n mytarget -> mytarget ',' '(' ')' .[$end, IN, '=', ')', ',', ']']"
	}
	node: {
		title:	"333"
		label:	"state 333\n mystarreditem -> ',' starred_item mystarreditem ."
	}
	node: {
		title:	"334"
		label:	"state 334\n comp_for -> ASYNC FOR target_list . IN or_test comp_iter\n comp_for -> ASYNC FOR target_list . IN or_test"
	}
	edge: {
		sourcename:	"334"
		targetname:	"352"
		label:	"IN"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"335"
		label:	"state 335\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n comp_for -> FOR target_list IN . or_test comp_iter\n comp_for -> FOR target_list IN . or_test\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"335"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"335"
		targetname:	"353"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"335"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"336"
		label:	"state 336\n dict_comprehension -> expression ':' expression comp_for ."
	}
	node: {
		title:	"337"
		label:	"state 337\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n dict_item -> expression ':' . expression\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"337"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"337"
		targetname:	"354"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"337"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"338"
		label:	"state 338\n mydictitem -> ',' dict_item mydictitem ."
	}
	node: {
		title:	"339"
		label:	"state 339\n myif -> IF or_test ELSE expression ."
	}
	node: {
		title:	"340"
		label:	"state 340\n mymodule -> .[$end]\n mymodule -> . ',' module mymodule\n mymodule -> . ',' module AS IDENTIFIER mymodule\n mymodule -> ',' module AS IDENTIFIER . mymodule"
	}
	backedge: {
		sourcename:	"340"
		targetname:	"196"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"340"
		targetname:	"355"
		label:	"mymodule"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"341"
		label:	"state 341\n parameter_list_starargs -> '*' mydefparameter ',' POWER parameter . ','\n parameter_list_starargs -> '*' mydefparameter ',' POWER parameter .[':']"
	}
	edge: {
		sourcename:	"341"
		targetname:	"356"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"342"
		label:	"state 342\n parameter_list_starargs -> '*' parameter mydefparameter ',' POWER . parameter ','\n parameter_list_starargs -> '*' parameter mydefparameter ',' POWER . parameter\n parameter -> . IDENTIFIER\n parameter -> . IDENTIFIER ':' expression"
	}
	backedge: {
		sourcename:	"342"
		targetname:	"86"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"342"
		targetname:	"357"
		label:	"parameter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"343"
		label:	"state 343\n parameter_list -> defparameter mydefparameter ',' '/' ',' . parameter_list_no_posonly\n parameter_list -> defparameter mydefparameter ',' '/' ',' .[':']\n parameter_list_no_posonly -> . defparameter mydefparameter ',' parameter_list_starargs\n parameter_list_no_posonly -> . defparameter mydefparameter ','\n parameter_list_no_posonly -> . defparameter mydefparameter\n parameter_list_no_posonly -> . parameter_list_starargs\n parameter_list_starargs -> . '*' parameter mydefparameter ',' POWER parameter ','\n parameter_list_starargs -> . '*' parameter mydefparameter ',' POWER parameter\n parameter_list_starargs -> . '*' parameter mydefparameter ','\n parameter_list_starargs -> . '*' parameter mydefparameter\n parameter_list_starargs -> . '*' mydefparameter ',' POWER parameter ','\n parameter_list_starargs -> . '*' mydefparameter ',' POWER parameter\n parameter_list_starargs -> . '*' mydefparameter ','\n parameter_list_starargs -> . '*' mydefparameter\n parameter_list_starargs -> . POWER parameter ','\n parameter_list_starargs -> . POWER parameter\n defparameter -> . parameter\n defparameter -> . parameter '=' expression\n parameter -> . IDENTIFIER\n parameter -> . IDENTIFIER ':' expression"
	}
	backedge: {
		sourcename:	"343"
		targetname:	"86"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"343"
		targetname:	"87"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"343"
		targetname:	"88"
		label:	"'*'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"343"
		targetname:	"358"
		label:	"parameter_list_no_posonly"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"343"
		targetname:	"92"
		label:	"parameter_list_starargs"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"343"
		targetname:	"359"
		label:	"defparameter"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"343"
		targetname:	"94"
		label:	"parameter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"344"
		label:	"state 344\n import_stmt -> FROM relative_module IMPORT IDENTIFIER AS IDENTIFIER . mymoduleidentifier\n mymoduleidentifier -> .[$end, AS]\n mymoduleidentifier -> . IDENTIFIER\n mymoduleidentifier -> . mymoduleidentifier AS IDENTIFIER"
	}
	backedge: {
		sourcename:	"344"
		targetname:	"323"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"344"
		targetname:	"360"
		label:	"mymoduleidentifier"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"345"
		label:	"state 345\n mymoduleidentifier -> mymoduleidentifier AS . IDENTIFIER"
	}
	edge: {
		sourcename:	"345"
		targetname:	"361"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"346"
		label:	"state 346\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER AS . IDENTIFIER mymoduleidentifier ',' ')'\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER AS . IDENTIFIER mymoduleidentifier ')'"
	}
	edge: {
		sourcename:	"346"
		targetname:	"362"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"347"
		label:	"state 347\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER mymoduleidentifier . ',' ')'\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER mymoduleidentifier . ')'\n mymoduleidentifier -> mymoduleidentifier . AS IDENTIFIER"
	}
	backedge: {
		sourcename:	"347"
		targetname:	"345"
		label:	"AS"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"347"
		targetname:	"363"
		label:	"')'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"347"
		targetname:	"364"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"348"
		label:	"state 348\n proper_slice -> ':' expression ':' expression ."
	}
	node: {
		title:	"349"
		label:	"state 349\n mysliceitem -> ',' slice_item mysliceitem ."
	}
	node: {
		title:	"350"
		label:	"state 350\n proper_slice -> expression ':' ':' expression ."
	}
	node: {
		title:	"351"
		label:	"state 351\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n proper_slice -> expression ':' expression ':' . expression\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n expression -> . conditional_expression\n expression -> . lambda_expr\n conditional_expression -> . or_test\n conditional_expression -> . or_test myif\n lambda_expr -> . LAMBDA myparameterlist ':' expression\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"351"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"9"
		label:	"LAMBDA"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"351"
		targetname:	"365"
		label:	"expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"60"
		label:	"conditional_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"61"
		label:	"lambda_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"63"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"351"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"352"
		label:	"state 352\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n comp_for -> ASYNC FOR target_list IN . or_test comp_iter\n comp_for -> ASYNC FOR target_list IN . or_test\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"352"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"352"
		targetname:	"366"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"352"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"353"
		label:	"state 353\n comp_for -> . ASYNC FOR target_list IN or_test comp_iter\n comp_for -> . FOR target_list IN or_test comp_iter\n comp_for -> FOR target_list IN or_test . comp_iter\n comp_for -> . ASYNC FOR target_list IN or_test\n comp_for -> . FOR target_list IN or_test[')', ']', '}']\n comp_for -> FOR target_list IN or_test .[')', ']', '}']\n or_test -> or_test . OR and_test\n comp_iter -> . comp_for\n comp_iter -> . comp_if\n comp_if -> . IF or_test comp_iter\n comp_if -> . IF or_test"
	}
	backedge: {
		sourcename:	"353"
		targetname:	"230"
		label:	"ASYNC"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"353"
		targetname:	"367"
		label:	"IF"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"353"
		targetname:	"189"
		label:	"OR"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"353"
		targetname:	"231"
		label:	"FOR"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"353"
		targetname:	"368"
		label:	"comp_for"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"353"
		targetname:	"369"
		label:	"comp_iter"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"353"
		targetname:	"370"
		label:	"comp_if"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"354"
		label:	"state 354\n dict_item -> expression ':' expression ."
	}
	node: {
		title:	"355"
		label:	"state 355\n mymodule -> ',' module AS IDENTIFIER mymodule ."
	}
	node: {
		title:	"356"
		label:	"state 356\n parameter_list_starargs -> '*' mydefparameter ',' POWER parameter ',' ."
	}
	node: {
		title:	"357"
		label:	"state 357\n parameter_list_starargs -> '*' parameter mydefparameter ',' POWER parameter . ','\n parameter_list_starargs -> '*' parameter mydefparameter ',' POWER parameter .[':']"
	}
	edge: {
		sourcename:	"357"
		targetname:	"371"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"358"
		label:	"state 358\n parameter_list -> defparameter mydefparameter ',' '/' ',' parameter_list_no_posonly ."
	}
	node: {
		title:	"359"
		label:	"state 359\n parameter_list_no_posonly -> defparameter . mydefparameter ',' parameter_list_starargs\n parameter_list_no_posonly -> defparameter . mydefparameter ','\n parameter_list_no_posonly -> defparameter . mydefparameter\n mydefparameter -> .[':']\n mydefparameter -> . ',' defparameter mydefparameter"
	}
	backedge: {
		sourcename:	"359"
		targetname:	"205"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"359"
		targetname:	"372"
		label:	"mydefparameter"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"360"
		label:	"state 360\n import_stmt -> FROM relative_module IMPORT IDENTIFIER AS IDENTIFIER mymoduleidentifier .[$end]\n mymoduleidentifier -> mymoduleidentifier . AS IDENTIFIER"
	}
	backedge: {
		sourcename:	"360"
		targetname:	"345"
		label:	"AS"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"361"
		label:	"state 361\n mymoduleidentifier -> mymoduleidentifier AS IDENTIFIER ."
	}
	node: {
		title:	"362"
		label:	"state 362\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER AS IDENTIFIER . mymoduleidentifier ',' ')'\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER AS IDENTIFIER . mymoduleidentifier ')'\n mymoduleidentifier -> .[AS, ')', ',']\n mymoduleidentifier -> . IDENTIFIER\n mymoduleidentifier -> . mymoduleidentifier AS IDENTIFIER"
	}
	backedge: {
		sourcename:	"362"
		targetname:	"323"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"362"
		targetname:	"373"
		label:	"mymoduleidentifier"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"363"
		label:	"state 363\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER mymoduleidentifier ')' ."
	}
	node: {
		title:	"364"
		label:	"state 364\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER mymoduleidentifier ',' . ')'"
	}
	edge: {
		sourcename:	"364"
		targetname:	"374"
		label:	"')'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"365"
		label:	"state 365\n proper_slice -> expression ':' expression ':' expression ."
	}
	node: {
		title:	"366"
		label:	"state 366\n comp_for -> . ASYNC FOR target_list IN or_test comp_iter\n comp_for -> ASYNC FOR target_list IN or_test . comp_iter\n comp_for -> . FOR target_list IN or_test comp_iter\n comp_for -> . ASYNC FOR target_list IN or_test[')', ']', '}']\n comp_for -> ASYNC FOR target_list IN or_test .[')', ']', '}']\n comp_for -> . FOR target_list IN or_test\n or_test -> or_test . OR and_test\n comp_iter -> . comp_for\n comp_iter -> . comp_if\n comp_if -> . IF or_test comp_iter\n comp_if -> . IF or_test"
	}
	backedge: {
		sourcename:	"366"
		targetname:	"230"
		label:	"ASYNC"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"366"
		targetname:	"367"
		label:	"IF"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"366"
		targetname:	"189"
		label:	"OR"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"366"
		targetname:	"231"
		label:	"FOR"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"366"
		targetname:	"368"
		label:	"comp_for"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"366"
		targetname:	"375"
		label:	"comp_iter"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"366"
		targetname:	"370"
		label:	"comp_if"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"367"
		label:	"state 367\n comparison -> . or_expr\n comparison -> . or_expr mycomparison\n and_expr -> . shift_expr\n and_expr -> . and_expr '&' shift_expr\n xor_expr -> . and_expr\n xor_expr -> . xor_expr '^' and_expr\n or_expr -> . xor_expr\n or_expr -> . or_expr '|' xor_expr\n shift_expr -> . a_expr\n shift_expr -> . shift_expr shifter a_expr\n u_expr -> . power\n u_expr -> . '-' u_expr\n u_expr -> . '+' u_expr\n u_expr -> . '~' u_expr\n m_expr -> . u_expr\n m_expr -> . m_expr '*' u_expr\n m_expr -> . m_expr '@' m_expr\n m_expr -> . m_expr INTDIVIDE u_expr\n m_expr -> . m_expr '/' u_expr\n m_expr -> . m_expr '%' u_expr\n a_expr -> . m_expr\n a_expr -> . a_expr '+' m_expr\n a_expr -> . a_expr '-' m_expr\n await_expr -> . AWAIT primary\n await_expr -> . AWAIT slicing\n await_expr -> . AWAIT IDENTIFIER\n power -> . firstpower\n power -> . firstpower mypower\n power -> . IDENTIFIER\n power -> . IDENTIFIER mypower\n firstpower -> . await_expr\n firstpower -> . primary\n firstpower -> . slicing\n primary -> . atom\n slicing -> . primary '[' slice_list ']'\n slicing -> . slicing '[' slice_list ']'\n slicing -> . IDENTIFIER '[' slice_list ']'\n enclosure -> . parenth_form\n enclosure -> . list_display\n enclosure -> . dict_display\n enclosure -> . set_display\n enclosure -> . generator_expression\n enclosure -> . yield_atom\n enclosure -> . '[' ']'\n enclosure -> . '(' ')'\n parenth_form -> . '(' starred_expression ')'\n list_display -> . '[' starred_list ']'\n list_display -> . '[' comprehension ']'\n set_display -> . '{' starred_list '}'\n set_display -> . '{' comprehension '}'\n dict_display -> . '{' '}'\n dict_display -> . '{' dict_item_list '}'\n dict_display -> . '{' dict_comprehension '}'\n generator_expression -> . '(' expression comp_for ')'\n yield_atom -> . '(' yield_expression ')'\n or_test -> . and_test\n or_test -> . or_test OR and_test\n and_test -> . not_test\n and_test -> . and_test AND not_test\n not_test -> . comparison\n not_test -> . NOT not_test\n comp_if -> IF . or_test comp_iter\n comp_if -> IF . or_test\n atom -> . NUMBER\n atom -> . enclosure"
	}
	backedge: {
		sourcename:	"367"
		targetname:	"1"
		label:	"AWAIT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"7"
		label:	"NOT"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"79"
		label:	"IDENTIFIER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"16"
		label:	"NUMBER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"18"
		label:	"'+'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"19"
		label:	"'-'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"20"
		label:	"'~'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"73"
		label:	"'['"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"74"
		label:	"'('"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"23"
		label:	"'{'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"36"
		label:	"comparison"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"37"
		label:	"and_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"38"
		label:	"xor_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"39"
		label:	"or_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"40"
		label:	"shift_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"41"
		label:	"u_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"42"
		label:	"m_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"43"
		label:	"a_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"44"
		label:	"await_expr"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"45"
		label:	"power"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"46"
		label:	"firstpower"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"47"
		label:	"primary"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"80"
		label:	"slicing"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"49"
		label:	"enclosure"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"50"
		label:	"parenth_form"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"51"
		label:	"list_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"52"
		label:	"set_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"53"
		label:	"dict_display"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"54"
		label:	"generator_expression"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"55"
		label:	"yield_atom"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"367"
		targetname:	"376"
		label:	"or_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"64"
		label:	"and_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"65"
		label:	"not_test"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"367"
		targetname:	"68"
		label:	"atom"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"368"
		label:	"state 368\n comp_iter -> comp_for ."
	}
	node: {
		title:	"369"
		label:	"state 369\n comp_for -> FOR target_list IN or_test comp_iter ."
	}
	node: {
		title:	"370"
		label:	"state 370\n comp_iter -> comp_if ."
	}
	node: {
		title:	"371"
		label:	"state 371\n parameter_list_starargs -> '*' parameter mydefparameter ',' POWER parameter ',' ."
	}
	node: {
		title:	"372"
		label:	"state 372\n parameter_list_no_posonly -> defparameter mydefparameter . ',' parameter_list_starargs\n parameter_list_no_posonly -> defparameter mydefparameter . ','\n parameter_list_no_posonly -> defparameter mydefparameter .[':']"
	}
	edge: {
		sourcename:	"372"
		targetname:	"377"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"373"
		label:	"state 373\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier . ',' ')'\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier . ')'\n mymoduleidentifier -> mymoduleidentifier . AS IDENTIFIER"
	}
	backedge: {
		sourcename:	"373"
		targetname:	"345"
		label:	"AS"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"373"
		targetname:	"378"
		label:	"')'"
		color:	blue
		textcolor:	black
	}
	edge: {
		sourcename:	"373"
		targetname:	"379"
		label:	"','"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"374"
		label:	"state 374\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER mymoduleidentifier ',' ')' ."
	}
	node: {
		title:	"375"
		label:	"state 375\n comp_for -> ASYNC FOR target_list IN or_test comp_iter ."
	}
	node: {
		title:	"376"
		label:	"state 376\n comp_for -> . ASYNC FOR target_list IN or_test comp_iter\n comp_for -> . FOR target_list IN or_test comp_iter\n comp_for -> . ASYNC FOR target_list IN or_test\n comp_for -> . FOR target_list IN or_test\n or_test -> or_test . OR and_test\n comp_iter -> . comp_for\n comp_iter -> . comp_if\n comp_if -> . IF or_test comp_iter\n comp_if -> IF or_test . comp_iter\n comp_if -> . IF or_test[')', ']', '}']\n comp_if -> IF or_test .[')', ']', '}']"
	}
	backedge: {
		sourcename:	"376"
		targetname:	"230"
		label:	"ASYNC"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"376"
		targetname:	"367"
		label:	"IF"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"376"
		targetname:	"189"
		label:	"OR"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"376"
		targetname:	"231"
		label:	"FOR"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"376"
		targetname:	"368"
		label:	"comp_for"
		color:	green
		textcolor:	black
	}
	edge: {
		sourcename:	"376"
		targetname:	"380"
		label:	"comp_iter"
		color:	green
		textcolor:	black
	}
	backedge: {
		sourcename:	"376"
		targetname:	"370"
		label:	"comp_if"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"377"
		label:	"state 377\n parameter_list_no_posonly -> defparameter mydefparameter ',' . parameter_list_starargs\n parameter_list_no_posonly -> defparameter mydefparameter ',' .[':']\n parameter_list_starargs -> . '*' parameter mydefparameter ',' POWER parameter ','\n parameter_list_starargs -> . '*' parameter mydefparameter ',' POWER parameter\n parameter_list_starargs -> . '*' parameter mydefparameter ','\n parameter_list_starargs -> . '*' parameter mydefparameter\n parameter_list_starargs -> . '*' mydefparameter ',' POWER parameter ','\n parameter_list_starargs -> . '*' mydefparameter ',' POWER parameter\n parameter_list_starargs -> . '*' mydefparameter ','\n parameter_list_starargs -> . '*' mydefparameter\n parameter_list_starargs -> . POWER parameter ','\n parameter_list_starargs -> . POWER parameter"
	}
	backedge: {
		sourcename:	"377"
		targetname:	"87"
		label:	"POWER"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"377"
		targetname:	"88"
		label:	"'*'"
		color:	blue
		textcolor:	black
	}
	backedge: {
		sourcename:	"377"
		targetname:	"321"
		label:	"parameter_list_starargs"
		color:	green
		textcolor:	black
	}
	node: {
		title:	"378"
		label:	"state 378\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier ')' ."
	}
	node: {
		title:	"379"
		label:	"state 379\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier ',' . ')'"
	}
	edge: {
		sourcename:	"379"
		targetname:	"381"
		label:	"')'"
		color:	blue
		textcolor:	black
	}
	node: {
		title:	"380"
		label:	"state 380\n comp_if -> IF or_test comp_iter ."
	}
	node: {
		title:	"381"
		label:	"state 381\n import_stmt -> FROM relative_module IMPORT '(' IDENTIFIER AS IDENTIFIER mymoduleidentifier ',' ')' ."
	}


}
